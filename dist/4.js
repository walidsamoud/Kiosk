((typeof self !== 'undefined' ? self : this)["webpackJsonp"] = (typeof self !== 'undefined' ? self : this)["webpackJsonp"] || []).push([[4],{

/***/ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/simple-keyboard/build/css/index.css":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--6-oneOf-3-1!./node_modules/postcss-loader/src??ref--6-oneOf-3-2!./node_modules/simple-keyboard/build/css/index.css ***!
  \**********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../../css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"/*!\\n * \\n *   simple-keyboard v2.29.24\\n *   https://github.com/hodgef/simple-keyboard\\n * \\n *   Copyright (c) Francisco Hodge (https://github.com/hodgef)\\n * \\n *   This source code is licensed under the MIT license found in the\\n *   LICENSE file in the root directory of this source tree.\\n *   \\n */.hg-theme-default{width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;box-sizing:border-box;overflow:hidden;touch-action:manipulation}.hg-theme-default .hg-button span{pointer-events:none}.hg-theme-default button.hg-button{border-width:0;outline:0;font-size:inherit}.hg-theme-default{font-family:HelveticaNeue-Light,Helvetica Neue Light,Helvetica Neue,Helvetica,Arial,Lucida Grande,sans-serif;background-color:#ececec;padding:5px;border-radius:5px}.hg-theme-default .hg-button{display:inline-block;flex-grow:1}.hg-theme-default .hg-row{display:flex}.hg-theme-default .hg-row:not(:last-child){margin-bottom:5px}.hg-theme-default .hg-row .hg-button-container,.hg-theme-default .hg-row .hg-button:not(:last-child){margin-right:5px}.hg-theme-default .hg-row>div:last-child{margin-right:0}.hg-theme-default .hg-row .hg-button-container{display:flex}.hg-theme-default .hg-button{box-shadow:0 0 3px -1px rgba(0,0,0,.3);height:40px;border-radius:5px;box-sizing:border-box;padding:5px;background:#fff;border-bottom:1px solid #b5b5b5;cursor:pointer;display:flex;align-items:center;justify-content:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.hg-theme-default .hg-button.hg-activeButton{background:#efefef}.hg-theme-default.hg-layout-numeric .hg-button{width:33.3%;height:60px;align-items:center;display:flex;justify-content:center}.hg-theme-default .hg-button.hg-button-numpadadd,.hg-theme-default .hg-button.hg-button-numpadenter{height:85px}.hg-theme-default .hg-button.hg-button-numpad0{width:105px}.hg-theme-default .hg-button.hg-button-com{max-width:85px}.hg-theme-default .hg-button.hg-standardBtn.hg-button-at{max-width:45px}.hg-theme-default .hg-button.hg-selectedButton{background:rgba(5,25,70,.53);color:#fff}.hg-theme-default .hg-button.hg-standardBtn[data-skbtn=\\\".com\\\"]{max-width:82px}.hg-theme-default .hg-button.hg-standardBtn[data-skbtn=\\\"@\\\"]{max-width:60px}\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPyEuL25vZGVfbW9kdWxlcy9zaW1wbGUta2V5Ym9hcmQvYnVpbGQvY3NzL2luZGV4LmNzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zaW1wbGUta2V5Ym9hcmQvYnVpbGQvY3NzL2luZGV4LmNzcz9mZDE0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKiFcXG4gKiBcXG4gKiAgIHNpbXBsZS1rZXlib2FyZCB2Mi4yOS4yNFxcbiAqICAgaHR0cHM6Ly9naXRodWIuY29tL2hvZGdlZi9zaW1wbGUta2V5Ym9hcmRcXG4gKiBcXG4gKiAgIENvcHlyaWdodCAoYykgRnJhbmNpc2NvIEhvZGdlIChodHRwczovL2dpdGh1Yi5jb20vaG9kZ2VmKVxcbiAqIFxcbiAqICAgVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXFxuICogICBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXFxuICogICBcXG4gKi8uaGctdGhlbWUtZGVmYXVsdHt3aWR0aDoxMDAlOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6aGlkZGVuO3RvdWNoLWFjdGlvbjptYW5pcHVsYXRpb259LmhnLXRoZW1lLWRlZmF1bHQgLmhnLWJ1dHRvbiBzcGFue3BvaW50ZXItZXZlbnRzOm5vbmV9LmhnLXRoZW1lLWRlZmF1bHQgYnV0dG9uLmhnLWJ1dHRvbntib3JkZXItd2lkdGg6MDtvdXRsaW5lOjA7Zm9udC1zaXplOmluaGVyaXR9LmhnLXRoZW1lLWRlZmF1bHR7Zm9udC1mYW1pbHk6SGVsdmV0aWNhTmV1ZS1MaWdodCxIZWx2ZXRpY2EgTmV1ZSBMaWdodCxIZWx2ZXRpY2EgTmV1ZSxIZWx2ZXRpY2EsQXJpYWwsTHVjaWRhIEdyYW5kZSxzYW5zLXNlcmlmO2JhY2tncm91bmQtY29sb3I6I2VjZWNlYztwYWRkaW5nOjVweDtib3JkZXItcmFkaXVzOjVweH0uaGctdGhlbWUtZGVmYXVsdCAuaGctYnV0dG9ue2Rpc3BsYXk6aW5saW5lLWJsb2NrO2ZsZXgtZ3JvdzoxfS5oZy10aGVtZS1kZWZhdWx0IC5oZy1yb3d7ZGlzcGxheTpmbGV4fS5oZy10aGVtZS1kZWZhdWx0IC5oZy1yb3c6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjVweH0uaGctdGhlbWUtZGVmYXVsdCAuaGctcm93IC5oZy1idXR0b24tY29udGFpbmVyLC5oZy10aGVtZS1kZWZhdWx0IC5oZy1yb3cgLmhnLWJ1dHRvbjpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1yaWdodDo1cHh9LmhnLXRoZW1lLWRlZmF1bHQgLmhnLXJvdz5kaXY6bGFzdC1jaGlsZHttYXJnaW4tcmlnaHQ6MH0uaGctdGhlbWUtZGVmYXVsdCAuaGctcm93IC5oZy1idXR0b24tY29udGFpbmVye2Rpc3BsYXk6ZmxleH0uaGctdGhlbWUtZGVmYXVsdCAuaGctYnV0dG9ue2JveC1zaGFkb3c6MCAwIDNweCAtMXB4IHJnYmEoMCwwLDAsLjMpO2hlaWdodDo0MHB4O2JvcmRlci1yYWRpdXM6NXB4O2JveC1zaXppbmc6Ym9yZGVyLWJveDtwYWRkaW5nOjVweDtiYWNrZ3JvdW5kOiNmZmY7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2I1YjViNTtjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOnJnYmEoMCwwLDAsMCl9LmhnLXRoZW1lLWRlZmF1bHQgLmhnLWJ1dHRvbi5oZy1hY3RpdmVCdXR0b257YmFja2dyb3VuZDojZWZlZmVmfS5oZy10aGVtZS1kZWZhdWx0LmhnLWxheW91dC1udW1lcmljIC5oZy1idXR0b257d2lkdGg6MzMuMyU7aGVpZ2h0OjYwcHg7YWxpZ24taXRlbXM6Y2VudGVyO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5oZy10aGVtZS1kZWZhdWx0IC5oZy1idXR0b24uaGctYnV0dG9uLW51bXBhZGFkZCwuaGctdGhlbWUtZGVmYXVsdCAuaGctYnV0dG9uLmhnLWJ1dHRvbi1udW1wYWRlbnRlcntoZWlnaHQ6ODVweH0uaGctdGhlbWUtZGVmYXVsdCAuaGctYnV0dG9uLmhnLWJ1dHRvbi1udW1wYWQwe3dpZHRoOjEwNXB4fS5oZy10aGVtZS1kZWZhdWx0IC5oZy1idXR0b24uaGctYnV0dG9uLWNvbXttYXgtd2lkdGg6ODVweH0uaGctdGhlbWUtZGVmYXVsdCAuaGctYnV0dG9uLmhnLXN0YW5kYXJkQnRuLmhnLWJ1dHRvbi1hdHttYXgtd2lkdGg6NDVweH0uaGctdGhlbWUtZGVmYXVsdCAuaGctYnV0dG9uLmhnLXNlbGVjdGVkQnV0dG9ue2JhY2tncm91bmQ6cmdiYSg1LDI1LDcwLC41Myk7Y29sb3I6I2ZmZn0uaGctdGhlbWUtZGVmYXVsdCAuaGctYnV0dG9uLmhnLXN0YW5kYXJkQnRuW2RhdGEtc2tidG49XFxcIi5jb21cXFwiXXttYXgtd2lkdGg6ODJweH0uaGctdGhlbWUtZGVmYXVsdCAuaGctYnV0dG9uLmhnLXN0YW5kYXJkQnRuW2RhdGEtc2tidG49XFxcIkBcXFwiXXttYXgtd2lkdGg6NjBweH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/simple-keyboard/build/css/index.css\n");

/***/ }),

/***/ "./node_modules/qrcode.vue/dist/qrcode.vue.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/qrcode.vue/dist/qrcode.vue.esm.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*!\n * qrcode.vue v1.7.0\n * A Vue component to generate QRCode.\n * Â© 2017-2019 @scopewu(https://github.com/scopewu)\n * MIT License.\n */\nvar mode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3\n};\n\nfunction QR8bitByte(data) {\n  this.mode = mode.MODE_8BIT_BYTE;\n  this.data = data;\n}\n\nQR8bitByte.prototype = {\n  getLength: function (buffer) {\n    return this.data.length;\n  },\n  write: function (buffer) {\n    for (var i = 0; i < this.data.length; i++) {\n      // not JIS ...\n      buffer.put(this.data.charCodeAt(i), 8);\n    }\n  }\n};\nvar _8BitByte = QR8bitByte;\n\nvar ErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2\n};\n\nfunction QRRSBlock(totalCount, dataCount) {\n  this.totalCount = totalCount;\n  this.dataCount = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [// L\n// M\n// Q\n// H\n// 1\n[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], // 2\n[1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], // 3\n[1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], // 4\t\t\n[1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], // 5\n[1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], // 6\n[2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], // 7\t\t\n[2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], // 8\n[2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], // 9\n[2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], // 10\t\t\n[2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], // 11\n[4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], // 12\n[2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], // 13\n[4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], // 14\n[3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], // 15\n[5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], // 16\n[5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], // 17\n[1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], // 18\n[5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], // 19\n[3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], // 20\n[3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], // 21\n[4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], // 22\n[2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], // 23\n[4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], // 24\n[6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], // 25\n[8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], // 26\n[10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], // 27\n[8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], // 28\n[3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], // 29\n[7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], // 30\n[5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], // 31\n[13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], // 32\n[17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], // 33\n[17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], // 34\n[13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], // 35\n[12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], // 36\n[6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], // 37\n[17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], // 38\n[4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], // 39\n[20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], // 40\n[19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n  var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\n  if (rsBlock == undefined) {\n    throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n  }\n\n  var length = rsBlock.length / 3;\n  var list = new Array();\n\n  for (var i = 0; i < length; i++) {\n    var count = rsBlock[i * 3 + 0];\n    var totalCount = rsBlock[i * 3 + 1];\n    var dataCount = rsBlock[i * 3 + 2];\n\n    for (var j = 0; j < count; j++) {\n      list.push(new QRRSBlock(totalCount, dataCount));\n    }\n  }\n\n  return list;\n};\n\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n  switch (errorCorrectLevel) {\n    case ErrorCorrectLevel.L:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\n    case ErrorCorrectLevel.M:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\n    case ErrorCorrectLevel.Q:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\n    case ErrorCorrectLevel.H:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\n    default:\n      return undefined;\n  }\n};\n\nvar RSBlock = QRRSBlock;\n\nfunction QRBitBuffer() {\n  this.buffer = new Array();\n  this.length = 0;\n}\n\nQRBitBuffer.prototype = {\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8);\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n  },\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit((num >>> length - i - 1 & 1) == 1);\n    }\n  },\n  getLengthInBits: function () {\n    return this.length;\n  },\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8);\n\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n\n    this.length++;\n  }\n};\nvar BitBuffer = QRBitBuffer;\n\nvar QRMath = {\n  glog: function (n) {\n    if (n < 1) {\n      throw new Error(\"glog(\" + n + \")\");\n    }\n\n    return QRMath.LOG_TABLE[n];\n  },\n  gexp: function (n) {\n    while (n < 0) {\n      n += 255;\n    }\n\n    while (n >= 256) {\n      n -= 255;\n    }\n\n    return QRMath.EXP_TABLE[n];\n  },\n  EXP_TABLE: new Array(256),\n  LOG_TABLE: new Array(256)\n};\n\nfor (var i = 0; i < 8; i++) {\n  QRMath.EXP_TABLE[i] = 1 << i;\n}\n\nfor (var i = 8; i < 256; i++) {\n  QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n}\n\nfor (var i = 0; i < 255; i++) {\n  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\n\nvar math = QRMath;\n\nfunction QRPolynomial(num, shift) {\n  if (num.length == undefined) {\n    throw new Error(num.length + \"/\" + shift);\n  }\n\n  var offset = 0;\n\n  while (offset < num.length && num[offset] == 0) {\n    offset++;\n  }\n\n  this.num = new Array(num.length - offset + shift);\n\n  for (var i = 0; i < num.length - offset; i++) {\n    this.num[i] = num[i + offset];\n  }\n}\n\nQRPolynomial.prototype = {\n  get: function (index) {\n    return this.num[index];\n  },\n  getLength: function () {\n    return this.num.length;\n  },\n  multiply: function (e) {\n    var num = new Array(this.getLength() + e.getLength() - 1);\n\n    for (var i = 0; i < this.getLength(); i++) {\n      for (var j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= math.gexp(math.glog(this.get(i)) + math.glog(e.get(j)));\n      }\n    }\n\n    return new QRPolynomial(num, 0);\n  },\n  mod: function (e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n\n    var ratio = math.glog(this.get(0)) - math.glog(e.get(0));\n    var num = new Array(this.getLength());\n\n    for (var i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n\n    for (var i = 0; i < e.getLength(); i++) {\n      num[i] ^= math.gexp(math.glog(e.get(i)) + ratio);\n    } // recursive call\n\n\n    return new QRPolynomial(num, 0).mod(e);\n  }\n};\nvar Polynomial = QRPolynomial;\n\nvar QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n};\nvar QRUtil = {\n  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n  getBCHTypeInfo: function (data) {\n    var d = data << 10;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n    }\n\n    return (data << 10 | d) ^ QRUtil.G15_MASK;\n  },\n  getBCHTypeNumber: function (data) {\n    var d = data << 12;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n    }\n\n    return data << 12 | d;\n  },\n  getBCHDigit: function (data) {\n    var digit = 0;\n\n    while (data != 0) {\n      digit++;\n      data >>>= 1;\n    }\n\n    return digit;\n  },\n  getPatternPosition: function (typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n  getMask: function (maskPattern, i, j) {\n    switch (maskPattern) {\n      case QRMaskPattern.PATTERN000:\n        return (i + j) % 2 == 0;\n\n      case QRMaskPattern.PATTERN001:\n        return i % 2 == 0;\n\n      case QRMaskPattern.PATTERN010:\n        return j % 3 == 0;\n\n      case QRMaskPattern.PATTERN011:\n        return (i + j) % 3 == 0;\n\n      case QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\n      case QRMaskPattern.PATTERN101:\n        return i * j % 2 + i * j % 3 == 0;\n\n      case QRMaskPattern.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 == 0;\n\n      case QRMaskPattern.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 == 0;\n\n      default:\n        throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n  },\n  getErrorCorrectPolynomial: function (errorCorrectLength) {\n    var a = new Polynomial([1], 0);\n\n    for (var i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new Polynomial([1, math.gexp(i)], 0));\n    }\n\n    return a;\n  },\n  getLengthInBits: function (mode$1, type) {\n    if (1 <= type && type < 10) {\n      // 1 - 9\n      switch (mode$1) {\n        case mode.MODE_NUMBER:\n          return 10;\n\n        case mode.MODE_ALPHA_NUM:\n          return 9;\n\n        case mode.MODE_8BIT_BYTE:\n          return 8;\n\n        case mode.MODE_KANJI:\n          return 8;\n\n        default:\n          throw new Error(\"mode:\" + mode$1);\n      }\n    } else if (type < 27) {\n      // 10 - 26\n      switch (mode$1) {\n        case mode.MODE_NUMBER:\n          return 12;\n\n        case mode.MODE_ALPHA_NUM:\n          return 11;\n\n        case mode.MODE_8BIT_BYTE:\n          return 16;\n\n        case mode.MODE_KANJI:\n          return 10;\n\n        default:\n          throw new Error(\"mode:\" + mode$1);\n      }\n    } else if (type < 41) {\n      // 27 - 40\n      switch (mode$1) {\n        case mode.MODE_NUMBER:\n          return 14;\n\n        case mode.MODE_ALPHA_NUM:\n          return 13;\n\n        case mode.MODE_8BIT_BYTE:\n          return 16;\n\n        case mode.MODE_KANJI:\n          return 12;\n\n        default:\n          throw new Error(\"mode:\" + mode$1);\n      }\n    } else {\n      throw new Error(\"type:\" + type);\n    }\n  },\n  getLostPoint: function (qrCode) {\n    var moduleCount = qrCode.getModuleCount();\n    var lostPoint = 0; // LEVEL1\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var dark = qrCode.isDark(row, col);\n\n        for (var r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n\n          for (var c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n\n            if (r == 0 && c == 0) {\n              continue;\n            }\n\n            if (dark == qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += 3 + sameCount - 5;\n        }\n      }\n    } // LEVEL2\n\n\n    for (var row = 0; row < moduleCount - 1; row++) {\n      for (var col = 0; col < moduleCount - 1; col++) {\n        var count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n\n        if (count == 0 || count == 4) {\n          lostPoint += 3;\n        }\n      }\n    } // LEVEL3\n\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount - 6; col++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount - 6; row++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n          lostPoint += 40;\n        }\n      }\n    } // LEVEL4\n\n\n    var darkCount = 0;\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  }\n};\nvar util = QRUtil;\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n} // for client side minification\n\n\nvar proto = QRCode.prototype;\n\nproto.addData = function (data) {\n  var newData = new _8BitByte(data);\n  this.dataList.push(newData);\n  this.dataCache = null;\n};\n\nproto.isDark = function (row, col) {\n  if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n    throw new Error(row + \",\" + col);\n  }\n\n  return this.modules[row][col];\n};\n\nproto.getModuleCount = function () {\n  return this.moduleCount;\n};\n\nproto.make = function () {\n  // Calculate automatically typeNumber if provided is < 1\n  if (this.typeNumber < 1) {\n    var typeNumber = 1;\n\n    for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n      var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n      var buffer = new BitBuffer();\n      var totalDataCount = 0;\n\n      for (var i = 0; i < rsBlocks.length; i++) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      for (var i = 0; i < this.dataList.length; i++) {\n        var data = this.dataList[i];\n        buffer.put(data.mode, 4);\n        buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n        data.write(buffer);\n      }\n\n      if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n    }\n\n    this.typeNumber = typeNumber;\n  }\n\n  this.makeImpl(false, this.getBestMaskPattern());\n};\n\nproto.makeImpl = function (test, maskPattern) {\n  this.moduleCount = this.typeNumber * 4 + 17;\n  this.modules = new Array(this.moduleCount);\n\n  for (var row = 0; row < this.moduleCount; row++) {\n    this.modules[row] = new Array(this.moduleCount);\n\n    for (var col = 0; col < this.moduleCount; col++) {\n      this.modules[row][col] = null; //(col + row) % 3;\n    }\n  }\n\n  this.setupPositionProbePattern(0, 0);\n  this.setupPositionProbePattern(this.moduleCount - 7, 0);\n  this.setupPositionProbePattern(0, this.moduleCount - 7);\n  this.setupPositionAdjustPattern();\n  this.setupTimingPattern();\n  this.setupTypeInfo(test, maskPattern);\n\n  if (this.typeNumber >= 7) {\n    this.setupTypeNumber(test);\n  }\n\n  if (this.dataCache == null) {\n    this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n  }\n\n  this.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function (row, col) {\n  for (var r = -1; r <= 7; r++) {\n    if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n    for (var c = -1; c <= 7; c++) {\n      if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n      if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n        this.modules[row + r][col + c] = true;\n      } else {\n        this.modules[row + r][col + c] = false;\n      }\n    }\n  }\n};\n\nproto.getBestMaskPattern = function () {\n  var minLostPoint = 0;\n  var pattern = 0;\n\n  for (var i = 0; i < 8; i++) {\n    this.makeImpl(true, i);\n    var lostPoint = util.getLostPoint(this);\n\n    if (i == 0 || minLostPoint > lostPoint) {\n      minLostPoint = lostPoint;\n      pattern = i;\n    }\n  }\n\n  return pattern;\n};\n\nproto.createMovieClip = function (target_mc, instance_name, depth) {\n  var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n  var cs = 1;\n  this.make();\n\n  for (var row = 0; row < this.modules.length; row++) {\n    var y = row * cs;\n\n    for (var col = 0; col < this.modules[row].length; col++) {\n      var x = col * cs;\n      var dark = this.modules[row][col];\n\n      if (dark) {\n        qr_mc.beginFill(0, 100);\n        qr_mc.moveTo(x, y);\n        qr_mc.lineTo(x + cs, y);\n        qr_mc.lineTo(x + cs, y + cs);\n        qr_mc.lineTo(x, y + cs);\n        qr_mc.endFill();\n      }\n    }\n  }\n\n  return qr_mc;\n};\n\nproto.setupTimingPattern = function () {\n  for (var r = 8; r < this.moduleCount - 8; r++) {\n    if (this.modules[r][6] != null) {\n      continue;\n    }\n\n    this.modules[r][6] = r % 2 == 0;\n  }\n\n  for (var c = 8; c < this.moduleCount - 8; c++) {\n    if (this.modules[6][c] != null) {\n      continue;\n    }\n\n    this.modules[6][c] = c % 2 == 0;\n  }\n};\n\nproto.setupPositionAdjustPattern = function () {\n  var pos = util.getPatternPosition(this.typeNumber);\n\n  for (var i = 0; i < pos.length; i++) {\n    for (var j = 0; j < pos.length; j++) {\n      var row = pos[i];\n      var col = pos[j];\n\n      if (this.modules[row][col] != null) {\n        continue;\n      }\n\n      for (var r = -2; r <= 2; r++) {\n        for (var c = -2; c <= 2; c++) {\n          if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n            this.modules[row + r][col + c] = true;\n          } else {\n            this.modules[row + r][col + c] = false;\n          }\n        }\n      }\n    }\n  }\n};\n\nproto.setupTypeNumber = function (test) {\n  var bits = util.getBCHTypeNumber(this.typeNumber);\n\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n  }\n\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n  }\n};\n\nproto.setupTypeInfo = function (test, maskPattern) {\n  var data = this.errorCorrectLevel << 3 | maskPattern;\n  var bits = util.getBCHTypeInfo(data); // vertical\t\t\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n\n    if (i < 6) {\n      this.modules[i][8] = mod;\n    } else if (i < 8) {\n      this.modules[i + 1][8] = mod;\n    } else {\n      this.modules[this.moduleCount - 15 + i][8] = mod;\n    }\n  } // horizontal\n\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n\n    if (i < 8) {\n      this.modules[8][this.moduleCount - i - 1] = mod;\n    } else if (i < 9) {\n      this.modules[8][15 - i - 1 + 1] = mod;\n    } else {\n      this.modules[8][15 - i - 1] = mod;\n    }\n  } // fixed module\n\n\n  this.modules[this.moduleCount - 8][8] = !test;\n};\n\nproto.mapData = function (data, maskPattern) {\n  var inc = -1;\n  var row = this.moduleCount - 1;\n  var bitIndex = 7;\n  var byteIndex = 0;\n\n  for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n    if (col == 6) col--;\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (this.modules[row][col - c] == null) {\n          var dark = false;\n\n          if (byteIndex < data.length) {\n            dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n          }\n\n          var mask = util.getMask(maskPattern, row, col - c);\n\n          if (mask) {\n            dark = !dark;\n          }\n\n          this.modules[row][col - c] = dark;\n          bitIndex--;\n\n          if (bitIndex == -1) {\n            byteIndex++;\n            bitIndex = 7;\n          }\n        }\n      }\n\n      row += inc;\n\n      if (row < 0 || this.moduleCount <= row) {\n        row -= inc;\n        inc = -inc;\n        break;\n      }\n    }\n  }\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  var buffer = new BitBuffer();\n\n  for (var i = 0; i < dataList.length; i++) {\n    var data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  } // calc num max data.\n\n\n  var totalDataCount = 0;\n\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalDataCount += rsBlocks[i].dataCount;\n  }\n\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n  } // end code\n\n\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  } // padding\n\n\n  while (buffer.getLengthInBits() % 8 != 0) {\n    buffer.putBit(false);\n  } // padding\n\n\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD0, 8);\n\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD1, 8);\n  }\n\n  return QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function (buffer, rsBlocks) {\n  var offset = 0;\n  var maxDcCount = 0;\n  var maxEcCount = 0;\n  var dcdata = new Array(rsBlocks.length);\n  var ecdata = new Array(rsBlocks.length);\n\n  for (var r = 0; r < rsBlocks.length; r++) {\n    var dcCount = rsBlocks[r].dataCount;\n    var ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n\n    offset += dcCount;\n    var rsPoly = util.getErrorCorrectPolynomial(ecCount);\n    var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n    var modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n\n    for (var i = 0; i < ecdata[r].length; i++) {\n      var modIndex = i + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n    }\n  }\n\n  var totalCodeCount = 0;\n\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalCodeCount += rsBlocks[i].totalCount;\n  }\n\n  var data = new Array(totalCodeCount);\n  var index = 0;\n\n  for (var i = 0; i < maxDcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < dcdata[r].length) {\n        data[index++] = dcdata[r][i];\n      }\n    }\n  }\n\n  for (var i = 0; i < maxEcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < ecdata[r].length) {\n        data[index++] = ecdata[r][i];\n      }\n    }\n  }\n\n  return data;\n};\n\nvar QRCode_1 = QRCode;\n\n/**\n * Encode UTF16 to UTF8.\n * See: http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/\n * @param str {string}\n * @returns {string}\n */\n\nfunction toUTF8String(str) {\n  var utf8Str = '';\n\n  for (var i = 0; i < str.length; i++) {\n    var charCode = str.charCodeAt(i);\n\n    if (charCode < 0x0080) {\n      utf8Str += String.fromCharCode(charCode);\n    } else if (charCode < 0x0800) {\n      utf8Str += String.fromCharCode(0xc0 | charCode >> 6);\n      utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n    } else if (charCode < 0xd800 || charCode >= 0xe000) {\n      utf8Str += String.fromCharCode(0xe0 | charCode >> 12);\n      utf8Str += String.fromCharCode(0x80 | charCode >> 6 & 0x3f);\n      utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n    } else {\n      // surrogate pair\n      i++; // UTF-16 encodes 0x10000-0x10FFFF by\n      // subtracting 0x10000 and splitting the\n      // 20 bits of 0x0-0xFFFFF into two halves\n\n      charCode = 0x10000 + ((charCode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\n      utf8Str += String.fromCharCode(0xf0 | charCode >> 18);\n      utf8Str += String.fromCharCode(0x80 | charCode >> 12 & 0x3f);\n      utf8Str += String.fromCharCode(0x80 | charCode >> 6 & 0x3f);\n      utf8Str += String.fromCharCode(0x80 | charCode & 0x3f);\n    }\n  }\n\n  return utf8Str;\n}\n\nfunction generatePath(modules) {\n  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var ops = [];\n  modules.forEach(function (row, y) {\n    var start = null;\n    row.forEach(function (cell, x) {\n      if (!cell && start !== null) {\n        // M0 0h7v1H0z injects the space with the move and drops the comma,\n        // saving a char per operation\n        ops.push(\"M\".concat(start + margin, \" \").concat(y + margin, \"h\").concat(x - start, \"v1H\").concat(start + margin, \"z\"));\n        start = null;\n        return;\n      } // end of row, clean up or skip\n\n\n      if (x === row.length - 1) {\n        if (!cell) {\n          // We would have closed the op above already so this can only mean\n          // 2+ light modules in a row.\n          return;\n        }\n\n        if (start === null) {\n          // Just a single dark module.\n          ops.push(\"M\".concat(x + margin, \",\").concat(y + margin, \" h1v1H\").concat(x + margin, \"z\"));\n        } else {\n          // Otherwise finish the current line.\n          ops.push(\"M\".concat(start + margin, \",\").concat(y + margin, \" h\").concat(x + 1 - start, \"v1H\").concat(start + margin, \"z\"));\n        }\n\n        return;\n      }\n\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join('');\n} // @vue/component\n\n\nvar QrcodeVue = {\n  props: {\n    value: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    className: {\n      type: String,\n      default: ''\n    },\n    size: {\n      type: [Number, String],\n      default: 100,\n      validator: function validator(s) {\n        return isNaN(Number(s)) !== true;\n      }\n    },\n    level: {\n      type: String,\n      default: 'L',\n      validator: function validator(l) {\n        return ['L', 'Q', 'M', 'H'].indexOf(l) > -1;\n      }\n    },\n    background: {\n      type: String,\n      default: '#fff'\n    },\n    foreground: {\n      type: String,\n      default: '#000'\n    },\n    renderAs: {\n      type: String,\n      required: false,\n      default: 'canvas',\n      validator: function validator(as) {\n        return ['canvas', 'svg'].indexOf(as) > -1;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      numCells: 0,\n      fgPath: ''\n    };\n  },\n  updated: function updated() {\n    this.render();\n  },\n  mounted: function mounted() {\n    this.render();\n  },\n  methods: {\n    render: function render() {\n      var value = this.value,\n          size = this.size,\n          level = this.level,\n          background = this.background,\n          foreground = this.foreground,\n          renderAs = this.renderAs;\n\n      var _size = size >>> 0; // size to number\n      // We'll use type===-1 to force QRCode to automatically pick the best type\n\n\n      var qrCode = new QRCode_1(-1, ErrorCorrectLevel[level]);\n      qrCode.addData(toUTF8String(value));\n      qrCode.make();\n      var cells = qrCode.modules;\n      var tileW = _size / cells.length;\n      var tileH = _size / cells.length;\n      var scale = window.devicePixelRatio || 1;\n\n      if (renderAs === 'svg') {\n        this.numCells = cells.length; // Drawing strategy: instead of a rect per module, we're going to create a\n        // single path for the dark modules and layer that on top of a light rect,\n        // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\n        // way faster than DOM ops.\n        // For level 1, 441 nodes -> 2\n        // For level 40, 31329 -> 2\n\n        this.fgPath = generatePath(cells);\n      } else {\n        var canvas = this.$refs['qrcode-vue'];\n        var ctx = canvas.getContext('2d');\n        canvas.height = canvas.width = _size * scale;\n        ctx.scale(scale, scale);\n        cells.forEach(function (row, rdx) {\n          row.forEach(function (cell, cdx) {\n            ctx.fillStyle = cell ? foreground : background;\n            var w = Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW);\n            var h = Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH);\n            ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h);\n          });\n        });\n      }\n    }\n  },\n  render: function render(createElement) {\n    var className = this.className,\n        value = this.value,\n        level = this.level,\n        background = this.background,\n        foreground = this.foreground,\n        size = this.size,\n        renderAs = this.renderAs,\n        numCells = this.numCells,\n        fgPath = this.fgPath;\n    return createElement('div', {\n      class: this.class || className,\n      attrs: {\n        value: value,\n        level: level,\n        background: background,\n        foreground: foreground\n      }\n    }, [renderAs === 'svg' ? createElement('svg', {\n      attrs: {\n        height: size,\n        width: size,\n        shapeRendering: 'crispEdges',\n        viewBox: \"0 0 \".concat(numCells, \" \").concat(numCells)\n      },\n      style: {\n        width: size + 'px',\n        height: size + 'px'\n      }\n    }, [createElement('path', {\n      attrs: {\n        fill: background,\n        d: \"M0,0 h\".concat(numCells, \"v\").concat(numCells, \"H0z\")\n      }\n    }), createElement('path', {\n      attrs: {\n        fill: foreground,\n        d: fgPath\n      }\n    })]) : createElement('canvas', {\n      attrs: {\n        height: size,\n        width: size\n      },\n      style: {\n        width: size + 'px',\n        height: size + 'px'\n      },\n      ref: 'qrcode-vue'\n    }, [])]);\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (QrcodeVue);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/qrcode.vue/dist/qrcode.vue.esm.js\n");

/***/ }),

/***/ "./node_modules/simple-keyboard/build/css/index.css":
/*!**********************************************************!*\
  !*** ./node_modules/simple-keyboard/build/css/index.css ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(/*! !../../../css-loader??ref--6-oneOf-3-1!../../../postcss-loader/src??ref--6-oneOf-3-2!./index.css */ \"./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/simple-keyboard/build/css/index.css\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(/*! ../../../vue-style-loader/lib/addStylesClient.js */ \"./node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7bd2d97a\", content, false, {\"sourceMap\":false,\"shadowMode\":false});\n// Hot Module Replacement\nif(true) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(/*! !../../../css-loader??ref--6-oneOf-3-1!../../../postcss-loader/src??ref--6-oneOf-3-2!./index.css */ \"./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/simple-keyboard/build/css/index.css\", function() {\n     var newContent = __webpack_require__(/*! !../../../css-loader??ref--6-oneOf-3-1!../../../postcss-loader/src??ref--6-oneOf-3-2!./index.css */ \"./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/simple-keyboard/build/css/index.css\");\n     if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2ltcGxlLWtleWJvYXJkL2J1aWxkL2Nzcy9pbmRleC5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2ltcGxlLWtleWJvYXJkL2J1aWxkL2Nzcy9pbmRleC5jc3M/ZjI1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS02LW9uZU9mLTMtMSEuLi8uLi8uLi9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNi1vbmVPZi0zLTIhLi9pbmRleC5jc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCI3YmQyZDk3YVwiLCBjb250ZW50LCBmYWxzZSwge1wic291cmNlTWFwXCI6ZmFsc2UsXCJzaGFkb3dNb2RlXCI6ZmFsc2V9KTtcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcbiAvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuIGlmKCFjb250ZW50LmxvY2Fscykge1xuICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi1vbmVPZi0zLTEhLi4vLi4vLi4vcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTYtb25lT2YtMy0yIS4vaW5kZXguY3NzXCIsIGZ1bmN0aW9uKCkge1xuICAgICB2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi1vbmVPZi0zLTEhLi4vLi4vLi4vcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTYtb25lT2YtMy0yIS4vaW5kZXguY3NzXCIpO1xuICAgICBpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcbiAgICAgdXBkYXRlKG5ld0NvbnRlbnQpO1xuICAgfSk7XG4gfVxuIC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3NcbiBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/simple-keyboard/build/css/index.css\n");

/***/ }),

/***/ "./node_modules/simple-keyboard/build/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/simple-keyboard/build/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * \n *   simple-keyboard v2.29.24\n *   https://github.com/hodgef/simple-keyboard\n * \n *   Copyright (c) Francisco Hodge (https://github.com/hodgef)\n * \n *   This source code is licensed under the MIT license found in the\n *   LICENSE file in the root directory of this source tree.\n *   \n */\n!function(t,e){ true?module.exports=e():undefined}(window,(function(){return function(t){var e={};function __webpack_require__(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,__webpack_require__),o.l=!0,o.exports}return __webpack_require__.m=t,__webpack_require__.c=e,__webpack_require__.d=function(t,e,n){__webpack_require__.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},__webpack_require__.r=function(t){\"undefined\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},__webpack_require__.t=function(t,e){if(1&e&&(t=__webpack_require__(t)),8&e)return t;if(4&e&&\"object\"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(__webpack_require__.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)__webpack_require__.d(n,o,function(e){return t[e]}.bind(null,o));return n},__webpack_require__.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return __webpack_require__.d(e,\"a\",e),e},__webpack_require__.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},__webpack_require__.p=\"\",__webpack_require__(__webpack_require__.s=0)}([function(t,e,n){t.exports=n(2)},function(t,e,n){},function(t,e,n){\"use strict\";n.r(e);n(1);function _createForOfIteratorHelper(t){if(\"undefined\"===typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(t=function(t,e){if(!t)return;if(\"string\"===typeof t)return _arrayLikeToArray(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(t,e)}(t))){var e=0,F=function(){};return{s:F,n:function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}},e:function(t){throw t},f:F}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var n,o,i=!0,s=!1;return{s:function(){n=t[Symbol.iterator]()},n:function(){var t=n.next();return i=t.done,t},e:function(t){s=!0,o=t},f:function(){try{i||null==n.return||n.return()}finally{if(s)throw o}}}}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}function _typeof(t){return(_typeof=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var o=function(){function Utilities(t){var e=t.getOptions,n=t.getCaretPosition,o=t.dispatch;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,Utilities),this.getOptions=e,this.getCaretPosition=n,this.dispatch=o,Utilities.bindMethods(Utilities,this)}var t,e,n;return t=Utilities,n=[{key:\"bindMethods\",value:function(t,e){var n,o=_createForOfIteratorHelper(Object.getOwnPropertyNames(t.prototype));try{for(o.s();!(n=o.n()).done;){var i=n.value;\"constructor\"===i||\"bindMethods\"===i||(e[i]=e[i].bind(e))}}catch(s){o.e(s)}finally{o.f()}}}],(e=[{key:\"getButtonClass\",value:function(t){var e=t.includes(\"{\")&&t.includes(\"}\")&&\"{//}\"!==t?\"functionBtn\":\"standardBtn\",n=t.replace(\"{\",\"\").replace(\"}\",\"\"),o=\"\";return\"standardBtn\"!==e&&(o=\" hg-button-\".concat(n)),\"hg-\".concat(e).concat(o)}},{key:\"getDefaultDiplay\",value:function(){return{\"{bksp}\":\"backspace\",\"{backspace}\":\"backspace\",\"{enter}\":\"< enter\",\"{shift}\":\"shift\",\"{shiftleft}\":\"shift\",\"{shiftright}\":\"shift\",\"{alt}\":\"alt\",\"{s}\":\"shift\",\"{tab}\":\"tab\",\"{lock}\":\"caps\",\"{capslock}\":\"caps\",\"{accept}\":\"Submit\",\"{space}\":\" \",\"{//}\":\" \",\"{esc}\":\"esc\",\"{escape}\":\"esc\",\"{f1}\":\"f1\",\"{f2}\":\"f2\",\"{f3}\":\"f3\",\"{f4}\":\"f4\",\"{f5}\":\"f5\",\"{f6}\":\"f6\",\"{f7}\":\"f7\",\"{f8}\":\"f8\",\"{f9}\":\"f9\",\"{f10}\":\"f10\",\"{f11}\":\"f11\",\"{f12}\":\"f12\",\"{numpaddivide}\":\"/\",\"{numlock}\":\"lock\",\"{arrowup}\":\"\\u2191\",\"{arrowleft}\":\"\\u2190\",\"{arrowdown}\":\"\\u2193\",\"{arrowright}\":\"\\u2192\",\"{prtscr}\":\"print\",\"{scrolllock}\":\"scroll\",\"{pause}\":\"pause\",\"{insert}\":\"ins\",\"{home}\":\"home\",\"{pageup}\":\"up\",\"{delete}\":\"del\",\"{end}\":\"end\",\"{pagedown}\":\"down\",\"{numpadmultiply}\":\"*\",\"{numpadsubtract}\":\"-\",\"{numpadadd}\":\"+\",\"{numpadenter}\":\"enter\",\"{period}\":\".\",\"{numpaddecimal}\":\".\",\"{numpad0}\":\"0\",\"{numpad1}\":\"1\",\"{numpad2}\":\"2\",\"{numpad3}\":\"3\",\"{numpad4}\":\"4\",\"{numpad5}\":\"5\",\"{numpad6}\":\"6\",\"{numpad7}\":\"7\",\"{numpad8}\":\"8\",\"{numpad9}\":\"9\"}}},{key:\"getButtonDisplayName\",value:function(t,e,n){return(e=n?Object.assign({},this.getDefaultDiplay(),e):e||this.getDefaultDiplay())[t]||t}},{key:\"getUpdatedInput\",value:function(t,e,n,o){var i=this.getOptions(),s=e;return(\"{bksp}\"===t||\"{backspace}\"===t)&&s.length>0?s=this.removeAt(s,n,o):\"{space}\"===t?s=this.addStringAt(s,\" \",n,o):\"{tab}\"!==t||\"boolean\"===typeof i.tabCharOnTab&&!1===i.tabCharOnTab?\"{enter}\"!==t&&\"{numpadenter}\"!==t||!i.newLineOnEnter?t.includes(\"numpad\")&&Number.isInteger(Number(t[t.length-2]))?s=this.addStringAt(s,t[t.length-2],n,o):\"{numpaddivide}\"===t?s=this.addStringAt(s,\"/\",n,o):\"{numpadmultiply}\"===t?s=this.addStringAt(s,\"*\",n,o):\"{numpadsubtract}\"===t?s=this.addStringAt(s,\"-\",n,o):\"{numpadadd}\"===t?s=this.addStringAt(s,\"+\",n,o):\"{numpaddecimal}\"===t?s=this.addStringAt(s,\".\",n,o):\"{\"===t||\"}\"===t?s=this.addStringAt(s,t,n,o):t.includes(\"{\")||t.includes(\"}\")||(s=this.addStringAt(s,t,n,o)):s=this.addStringAt(s,\"\\n\",n,o):s=this.addStringAt(s,\"\\t\",n,o),s}},{key:\"updateCaretPos\",value:function(t,e){var n=this.updateCaretPosAction(t,e);this.dispatch((function(t){t.caretPosition=n}))}},{key:\"updateCaretPosAction\",value:function(t,e){var n=this.getOptions(),o=this.getCaretPosition();return e?o>0&&(o-=t):o+=t,n.debug&&console.log(\"Caret at:\",o,\"(\".concat(this.keyboardDOMClass,\")\")),o}},{key:\"addStringAt\",value:function(t,e,n,o){var i;return n||0===n?(i=[t.slice(0,n),e,t.slice(n)].join(\"\"),this.isMaxLengthReached()||o&&this.updateCaretPos(e.length)):i=t+e,i}},{key:\"removeAt\",value:function(t,e,n){var o;if(0===this.getCaretPosition())return t;var i=/([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;return e&&e>=0?t.substring(e-2,e).match(i)?(o=t.substr(0,e-2)+t.substr(e),n&&this.updateCaretPos(2,!0)):(o=t.substr(0,e-1)+t.substr(e),n&&this.updateCaretPos(1,!0)):t.slice(-2).match(i)?(o=t.slice(0,-2),n&&this.updateCaretPos(2,!0)):(o=t.slice(0,-1),n&&this.updateCaretPos(1,!0)),o}},{key:\"handleMaxLength\",value:function(t,e){var n=this.getOptions(),o=n.maxLength,i=t[n.inputName],s=e.length-1>=o;if(e.length<=i.length)return!1;if(Number.isInteger(o))return n.debug&&console.log(\"maxLength (num) reached:\",s),s?(this.maxLengthReached=!0,!0):(this.maxLengthReached=!1,!1);if(\"object\"===_typeof(o)){var a=i.length===o[n.inputName];return n.debug&&console.log(\"maxLength (obj) reached:\",a),a?(this.maxLengthReached=!0,!0):(this.maxLengthReached=!1,!1)}}},{key:\"isMaxLengthReached\",value:function(){return Boolean(this.maxLengthReached)}},{key:\"isTouchDevice\",value:function(){return\"ontouchstart\"in window||navigator.maxTouchPoints}},{key:\"pointerEventsSupported\",value:function(){return window.PointerEvent}},{key:\"camelCase\",value:function(t){return!!t&&t.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce((function(t,e){return e.length?t+e[0].toUpperCase()+e.slice(1):t}))}}])&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),Utilities}();function PhysicalKeyboard_defineProperties(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var i=function(){function PhysicalKeyboard(t){var e=t.dispatch,n=t.getOptions;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,PhysicalKeyboard),this.dispatch=e,this.getOptions=n,o.bindMethods(PhysicalKeyboard,this)}var t,e,n;return t=PhysicalKeyboard,(e=[{key:\"handleHighlightKeyDown\",value:function(t){var e=this.getOptions(),n=this.getSimpleKeyboardLayoutKey(t);this.dispatch((function(t){var o=t.getButtonElement(n)||t.getButtonElement(\"{\".concat(n,\"}\"));o&&(o.style.backgroundColor=e.physicalKeyboardHighlightBgColor||\"#9ab4d0\",o.style.color=e.physicalKeyboardHighlightTextColor||\"white\")}))}},{key:\"handleHighlightKeyUp\",value:function(t){var e=this.getSimpleKeyboardLayoutKey(t);this.dispatch((function(t){var n=t.getButtonElement(e)||t.getButtonElement(\"{\".concat(e,\"}\"));n&&n.removeAttribute&&n.removeAttribute(\"style\")}))}},{key:\"getSimpleKeyboardLayoutKey\",value:function(t){var e;return((e=t.code.includes(\"Numpad\")||t.code.includes(\"Shift\")||t.code.includes(\"Space\")||t.code.includes(\"Backspace\")||t.code.includes(\"Control\")||t.code.includes(\"Alt\")||t.code.includes(\"Meta\")?t.code:t.key)!==e.toUpperCase()||\"F\"===t.code[0]&&Number.isInteger(Number(t.code[1]))&&t.code.length<=3)&&(e=e.toLowerCase()),e}}])&&PhysicalKeyboard_defineProperties(t.prototype,e),n&&PhysicalKeyboard_defineProperties(t,n),PhysicalKeyboard}();function _toConsumableArray(t){return function(t){if(Array.isArray(t))return Keyboard_arrayLikeToArray(t)}(t)||function(t){if(\"undefined\"!==typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"===typeof t)return Keyboard_arrayLikeToArray(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Keyboard_arrayLikeToArray(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Keyboard_arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}function Keyboard_classCallCheck(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function Keyboard_defineProperties(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function _defineProperty(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var s=function(){function SimpleKeyboard(){var t=this;Keyboard_classCallCheck(this,SimpleKeyboard),_defineProperty(this,\"handleParams\",(function(t){var e,n,o;if(\"string\"===typeof t[0])e=t[0].split(\".\").join(\"\"),n=document.querySelector(\".\".concat(e)),o=t[1];else if(t[0]instanceof HTMLDivElement){if(!t[0].className)throw console.warn(\"Any DOM element passed as parameter must have a class.\"),new Error(\"KEYBOARD_DOM_CLASS_ERROR\");e=t[0].className.split(\" \")[0],n=t[0],o=t[1]}else e=\"simple-keyboard\",n=document.querySelector(\".\".concat(e)),o=t[0];return{keyboardDOMClass:e,keyboardDOM:n,options:o}})),_defineProperty(this,\"getOptions\",(function(){return t.options})),_defineProperty(this,\"getCaretPosition\",(function(){return t.caretPosition})),_defineProperty(this,\"registerModule\",(function(e,n){t.modules[e]||(t.modules[e]={}),n(t.modules[e])})),_defineProperty(this,\"getKeyboardClassString\",(function(){for(var e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];var i=[t.keyboardDOMClass].concat(n).filter((function(t){return!!t}));return i.join(\" \")}));for(var e=arguments.length,n=new Array(e),s=0;s<e;s++)n[s]=arguments[s];var a=this.handleParams(n),r=a.keyboardDOMClass,u=a.keyboardDOM,c=a.options,l=void 0===c?{}:c;if(this.utilities=new o({getOptions:this.getOptions,getCaretPosition:this.getCaretPosition,dispatch:this.dispatch}),this.caretPosition=null,this.keyboardDOM=u,this.options=l,this.options.layoutName=this.options.layoutName||\"default\",this.options.theme=this.options.theme||\"hg-theme-default\",this.options.inputName=this.options.inputName||\"default\",this.options.preventMouseDownDefault=this.options.preventMouseDownDefault||!1,this.keyboardPluginClasses=\"\",o.bindMethods(SimpleKeyboard,this),this.input={},this.input[this.options.inputName]=\"\",this.keyboardDOMClass=r,this.buttonElements={},window.SimpleKeyboardInstances||(window.SimpleKeyboardInstances={}),this.currentInstanceName=this.utilities.camelCase(this.keyboardDOMClass),window.SimpleKeyboardInstances[this.currentInstanceName]=this,this.allKeyboardInstances=window.SimpleKeyboardInstances,this.keyboardInstanceNames=Object.keys(window.SimpleKeyboardInstances),this.isFirstKeyboardInstance=this.keyboardInstanceNames[0]===this.currentInstanceName,this.physicalKeyboard=new i({dispatch:this.dispatch,getOptions:this.getOptions}),!this.keyboardDOM)throw console.warn('\".'.concat(r,'\" was not found in the DOM.')),new Error(\"KEYBOARD_DOM_ERROR\");this.render(),this.modules={},this.loadModules()}var t,e,n;return t=SimpleKeyboard,(e=[{key:\"handleButtonClicked\",value:function(t){var e=this.options.debug;if(\"{//}\"===t)return!1;\"function\"===typeof this.options.onKeyPress&&this.options.onKeyPress(t),this.input[this.options.inputName]||(this.input[this.options.inputName]=\"\");var n=this.utilities.getUpdatedInput(t,this.input[this.options.inputName],this.caretPosition);if(this.input[this.options.inputName]!==n&&(!this.options.inputPattern||this.options.inputPattern&&this.inputPatternIsValid(n))){if(this.options.maxLength&&this.utilities.handleMaxLength(this.input,n))return!1;this.input[this.options.inputName]=this.utilities.getUpdatedInput(t,this.input[this.options.inputName],this.caretPosition,!0),e&&console.log(\"Input changed:\",this.input),this.options.syncInstanceInputs&&this.syncInstanceInputs(),\"function\"===typeof this.options.onChange&&this.options.onChange(this.input[this.options.inputName]),\"function\"===typeof this.options.onChangeAll&&this.options.onChangeAll(this.input)}e&&console.log(\"Key pressed:\",t)}},{key:\"handleButtonMouseDown\",value:function(t,e){var n=this;this.options.preventMouseDownDefault&&e.preventDefault(),this.options.stopMouseDownPropagation&&e.stopPropagation(),e&&e.target.classList.add(this.activeButtonClass),this.isMouseHold=!0,this.holdInteractionTimeout&&clearTimeout(this.holdInteractionTimeout),this.holdTimeout&&clearTimeout(this.holdTimeout),this.options.disableButtonHold||(this.holdTimeout=setTimeout((function(){(n.isMouseHold&&(!t.includes(\"{\")&&!t.includes(\"}\")||\"{delete}\"===t||\"{backspace}\"===t||\"{bksp}\"===t||\"{space}\"===t||\"{tab}\"===t)||\"{arrowright}\"===t||\"{arrowleft}\"===t||\"{arrowup}\"===t||\"{arrowdown}\"===t)&&(n.options.debug&&console.log(\"Button held:\",t),n.handleButtonHold(t,e)),clearTimeout(n.holdTimeout)}),500))}},{key:\"handleButtonMouseUp\",value:function(t){var e=this;this.recurseButtons((function(t){t.classList.remove(e.activeButtonClass)})),this.isMouseHold=!1,this.holdInteractionTimeout&&clearTimeout(this.holdInteractionTimeout),t&&\"function\"===typeof this.options.onKeyReleased&&this.options.onKeyReleased(t)}},{key:\"handleKeyboardContainerMouseDown\",value:function(t){this.options.preventMouseDownDefault&&t.preventDefault()}},{key:\"handleButtonHold\",value:function(t){var e=this;this.holdInteractionTimeout&&clearTimeout(this.holdInteractionTimeout),this.holdInteractionTimeout=setTimeout((function(){e.isMouseHold?(e.handleButtonClicked(t),e.handleButtonHold(t)):clearTimeout(e.holdInteractionTimeout)}),100)}},{key:\"syncInstanceInputs\",value:function(){var t=this;this.dispatch((function(e){e.replaceInput(t.input),e.caretPosition=t.caretPosition}))}},{key:\"clearInput\",value:function(t){t=t||this.options.inputName,this.input[t]=\"\",this.caretPosition=0,this.options.syncInstanceInputs&&this.syncInstanceInputs()}},{key:\"getInput\",value:function(t){return t=t||this.options.inputName,this.options.syncInstanceInputs&&this.syncInstanceInputs(),this.input[t]}},{key:\"setInput\",value:function(t,e){e=e||this.options.inputName,this.input[e]=t,this.options.syncInstanceInputs&&this.syncInstanceInputs()}},{key:\"replaceInput\",value:function(t){this.input=t}},{key:\"setOptions\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=this.changedOptions(t);this.options=Object.assign(this.options,t),e.length&&(this.options.debug&&console.log(\"changedOptions\",e),this.onSetOptions(t),this.render())}},{key:\"changedOptions\",value:function(t){var e=this;return Object.keys(t).filter((function(n){return JSON.stringify(t[n])!==JSON.stringify(e.options[n])}))}},{key:\"onSetOptions\",value:function(t){t.inputName&&(this.options.debug&&console.log(\"inputName changed. caretPosition reset.\"),this.caretPosition=null)}},{key:\"clear\",value:function(){this.keyboardDOM.innerHTML=\"\",this.keyboardDOM.className=this.keyboardDOMClass,this.buttonElements={}}},{key:\"dispatch\",value:function(t){if(!window.SimpleKeyboardInstances)throw console.warn(\"SimpleKeyboardInstances is not defined. Dispatch cannot be called.\"),new Error(\"INSTANCES_VAR_ERROR\");return Object.keys(window.SimpleKeyboardInstances).forEach((function(e){t(window.SimpleKeyboardInstances[e],e)}))}},{key:\"addButtonTheme\",value:function(t,e){var n=this;if(!e||!t)return!1;t.split(\" \").forEach((function(o){e.split(\" \").forEach((function(e){n.options.buttonTheme||(n.options.buttonTheme=[]);var i=!1;n.options.buttonTheme.map((function(t){if(t.class.split(\" \").includes(e)){i=!0;var n=t.buttons.split(\" \");n.includes(o)||(i=!0,n.push(o),t.buttons=n.join(\" \"))}return t})),i||n.options.buttonTheme.push({class:e,buttons:t})}))})),this.render()}},{key:\"removeButtonTheme\",value:function(t,e){var n=this;if(!t&&!e)return this.options.buttonTheme=[],this.render(),!1;t&&Array.isArray(this.options.buttonTheme)&&this.options.buttonTheme.length&&(t.split(\" \").forEach((function(t){n.options.buttonTheme.map((function(o,i){if(e&&e.includes(o.class)||!e){var s=o.buttons.split(\" \").filter((function(e){return e!==t}));s.length?o.buttons=s.join(\" \"):(n.options.buttonTheme.splice(i,1),o=null)}return o}))})),this.render())}},{key:\"getButtonElement\",value:function(t){var e,n=this.buttonElements[t];return n&&(e=n.length>1?n:n[0]),e}},{key:\"inputPatternIsValid\",value:function(t){var e,n=this.options.inputPattern;if((e=n instanceof RegExp?n:n[this.options.inputName])&&t){var o=e.test(t);return this.options.debug&&console.log('inputPattern (\"'.concat(e,'\"): ').concat(o?\"passed\":\"did not pass!\")),o}return!0}},{key:\"setEventListeners\",value:function(){!this.isFirstKeyboardInstance&&this.allKeyboardInstances||(this.options.debug&&console.log(\"Caret handling started (\".concat(this.keyboardDOMClass,\")\")),document.addEventListener(\"keyup\",this.handleKeyUp),document.addEventListener(\"keydown\",this.handleKeyDown),document.addEventListener(\"mouseup\",this.handleMouseUp),document.addEventListener(\"touchend\",this.handleTouchEnd))}},{key:\"handleKeyUp\",value:function(t){this.caretEventHandler(t),this.options.physicalKeyboardHighlight&&this.physicalKeyboard.handleHighlightKeyUp(t)}},{key:\"handleKeyDown\",value:function(t){this.options.physicalKeyboardHighlight&&this.physicalKeyboard.handleHighlightKeyDown(t)}},{key:\"handleMouseUp\",value:function(t){this.caretEventHandler(t)}},{key:\"handleTouchEnd\",value:function(t){this.caretEventHandler(t)}},{key:\"caretEventHandler\",value:function(t){var e;t.target.tagName&&(e=t.target.tagName.toLowerCase()),this.dispatch((function(n){n.isMouseHold&&(n.isMouseHold=!1),\"textarea\"!==e&&\"input\"!==e||n.options.disableCaretPositioning?n.options.disableCaretPositioning&&(n.caretPosition=null):(n.caretPosition=t.target.selectionStart,n.options.debug&&console.log(\"Caret at: \",t.target.selectionStart,t.target.tagName.toLowerCase(),\"(\".concat(n.keyboardDOMClass,\")\")))}))}},{key:\"recurseButtons\",value:function(t){var e=this;if(!t)return!1;Object.keys(this.buttonElements).forEach((function(n){return e.buttonElements[n].forEach(t)}))}},{key:\"destroy\",value:function(){this.options.debug&&console.log(\"Destroying simple-keyboard instance: \".concat(this.currentInstanceName)),document.removeEventListener(\"keyup\",this.handleKeyUp),document.removeEventListener(\"keydown\",this.handleKeyDown),document.removeEventListener(\"mouseup\",this.handleMouseUp),document.removeEventListener(\"touchend\",this.handleTouchEnd),document.onpointerup=null,document.ontouchend=null,document.ontouchcancel=null,document.onmouseup=null;var deleteButton=function(t){t.onpointerdown=null,t.onpointerup=null,t.onpointercancel=null,t.ontouchstart=null,t.ontouchend=null,t.ontouchcancel=null,t.onclick=null,t.onmousedown=null,t.onmouseup=null,t.remove(),t=null};this.recurseButtons(deleteButton),this.recurseButtons=null,deleteButton=null,this.keyboardDOM.onpointerdown=null,this.keyboardDOM.ontouchstart=null,this.keyboardDOM.onmousedown=null,this.clear(),window.SimpleKeyboardInstances[this.currentInstanceName]=null,delete window.SimpleKeyboardInstances[this.currentInstanceName],this.initialized=!1}},{key:\"getButtonThemeClasses\",value:function(t){var e=this.options.buttonTheme,n=[];return Array.isArray(e)&&e.forEach((function(e){if(e.class&&\"string\"===typeof e.class&&e.buttons&&\"string\"===typeof e.buttons){var o=e.class.split(\" \");e.buttons.split(\" \").includes(t)&&(n=[].concat(_toConsumableArray(n),_toConsumableArray(o)))}else console.warn('Incorrect \"buttonTheme\". Please check the documentation.',e)})),n}},{key:\"setDOMButtonAttributes\",value:function(t,e){var n=this.options.buttonAttributes;Array.isArray(n)&&n.forEach((function(n){n.attribute&&\"string\"===typeof n.attribute&&n.value&&\"string\"===typeof n.value&&n.buttons&&\"string\"===typeof n.buttons?n.buttons.split(\" \").includes(t)&&e(n.attribute,n.value):console.warn('Incorrect \"buttonAttributes\". Please check the documentation.',n)}))}},{key:\"onTouchDeviceDetected\",value:function(){this.processAutoTouchEvents(),this.disableContextualWindow()}},{key:\"disableContextualWindow\",value:function(){window.oncontextmenu=function(t){if(t.target.classList.contains(\"hg-button\"))return t.preventDefault(),t.stopPropagation(),!1}}},{key:\"processAutoTouchEvents\",value:function(){this.options.autoUseTouchEvents&&(this.options.useTouchEvents=!0,this.options.debug&&console.log(\"autoUseTouchEvents: Touch device detected, useTouchEvents enabled.\"))}},{key:\"onInit\",value:function(){this.options.debug&&console.log(\"\".concat(this.keyboardDOMClass,\" Initialized\")),this.setEventListeners(),\"function\"===typeof this.options.onInit&&this.options.onInit()}},{key:\"beforeFirstRender\",value:function(){this.utilities.isTouchDevice()&&this.onTouchDeviceDetected(),\"function\"===typeof this.options.beforeFirstRender&&this.options.beforeFirstRender(),this.isFirstKeyboardInstance&&this.utilities.pointerEventsSupported()&&!this.options.useTouchEvents&&!this.options.useMouseEvents&&this.options.debug&&console.log(\"Using PointerEvents as it is supported by this browser\"),this.options.useTouchEvents&&this.options.debug&&console.log(\"useTouchEvents has been enabled. Only touch events will be used.\")}},{key:\"beforeRender\",value:function(){\"function\"===typeof this.options.beforeRender&&this.options.beforeRender()}},{key:\"onRender\",value:function(){\"function\"===typeof this.options.onRender&&this.options.onRender()}},{key:\"onModulesLoaded\",value:function(){\"function\"===typeof this.options.onModulesLoaded&&this.options.onModulesLoaded()}},{key:\"loadModules\",value:function(){var t=this;Array.isArray(this.options.modules)&&(this.options.modules.forEach((function(e){var n=new e;if(n.constructor.name&&\"Function\"!==n.constructor.name){var o=\"module-\".concat(t.utilities.camelCase(n.constructor.name));t.keyboardPluginClasses=t.keyboardPluginClasses+\" \".concat(o)}n.init(t)})),this.keyboardPluginClasses=this.keyboardPluginClasses+\" modules-loaded\",this.render(),this.onModulesLoaded())}},{key:\"getModuleProp\",value:function(t,e){return!!this.modules[t]&&this.modules[t][e]}},{key:\"getModulesList\",value:function(){return Object.keys(this.modules)}},{key:\"parseRowDOMContainers\",value:function(t,e,n,o){var i=this,s=Array.from(t.children),a=0;return s.length&&n.forEach((function(n,r){var u=o[r];if(!u||!(u>n))return!1;var c=n-a,l=u-a,h=document.createElement(\"div\");h.className+=\"hg-button-container\";var d=\"\".concat(i.options.layoutName,\"-r\").concat(e,\"c\").concat(r);h.setAttribute(\"data-skUID\",d);var p=s.splice(c,l-c+1);a=l-c,p.forEach((function(t){return h.appendChild(t)})),s.splice(c,0,h),t.innerHTML=\"\",s.forEach((function(e){return t.appendChild(e)})),i.options.debug&&console.log(\"rowDOMContainer\",p,c,l,a+1)})),t}},{key:\"render\",value:function(){var t=this;this.clear(),this.initialized||this.beforeFirstRender(),this.beforeRender();var e=\"hg-layout-\".concat(this.options.layoutName),n=this.options.layout||{default:[\"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\"{tab} q w e r t y u i o p [ ] \\\\\",\"{lock} a s d f g h j k l ; ' {enter}\",\"{shift} z x c v b n m , . / {shift}\",\".com @ {space}\"],shift:[\"~ ! @ # $ % ^ & * ( ) _ + {bksp}\",\"{tab} Q W E R T Y U I O P { } |\",'{lock} A S D F G H J K L : \" {enter}',\"{shift} Z X C V B N M < > ? {shift}\",\".com @ {space}\"]},o=this.options.useTouchEvents||!1,i=o?\"hg-touch-events\":\"\",s=this.options.useMouseEvents||!1,a=this.options.disableRowButtonContainers;this.keyboardDOM.className=this.getKeyboardClassString(this.options.theme,e,this.keyboardPluginClasses,i),n[this.options.layoutName].forEach((function(e,n){var i=e.split(\" \"),r=document.createElement(\"div\");r.className+=\"hg-row\";var u=[],c=[];i.forEach((function(e,i){var l,h=!a&&\"string\"===typeof e&&e.length>1&&0===e.indexOf(\"[\"),d=!a&&\"string\"===typeof e&&e.length>1&&e.indexOf(\"]\")===e.length-1;h&&(u.push(i),e=e.replace(/\\[/g,\"\")),d&&(c.push(i),e=e.replace(/\\]/g,\"\"));var p=t.utilities.getButtonClass(e),f=t.utilities.getButtonDisplayName(e,t.options.display,t.options.mergeDisplay),y=t.options.useButtonTag?\"button\":\"div\",b=document.createElement(y);b.className+=\"hg-button \".concat(p),(l=b.classList).add.apply(l,_toConsumableArray(t.getButtonThemeClasses(e))),t.setDOMButtonAttributes(e,(function(t,e){b.setAttribute(t,e)})),t.activeButtonClass=\"hg-activeButton\",!t.utilities.pointerEventsSupported()||o||s?o?(b.ontouchstart=function(n){t.handleButtonClicked(e),t.handleButtonMouseDown(e,n)},b.ontouchend=function(){t.handleButtonMouseUp(e)},b.ontouchcancel=function(){t.handleButtonMouseUp(e)}):(b.onclick=function(){t.isMouseHold=!1,t.handleButtonClicked(e)},b.onmousedown=function(n){t.handleButtonMouseDown(e,n)},b.onmouseup=function(){t.handleButtonMouseUp(e)}):(b.onpointerdown=function(n){t.handleButtonClicked(e),t.handleButtonMouseDown(e,n)},b.onpointerup=function(){t.handleButtonMouseUp(e)},b.onpointercancel=function(){t.handleButtonMouseUp(e)}),b.setAttribute(\"data-skBtn\",e);var m=\"\".concat(t.options.layoutName,\"-r\").concat(n,\"b\").concat(i);b.setAttribute(\"data-skBtnUID\",m);var g=document.createElement(\"span\");g.innerHTML=f,b.appendChild(g),t.buttonElements[e]||(t.buttonElements[e]=[]),t.buttonElements[e].push(b),r.appendChild(b)})),r=t.parseRowDOMContainers(r,n,u,c),t.keyboardDOM.appendChild(r)})),this.onRender(),this.initialized||(this.initialized=!0,!this.utilities.pointerEventsSupported()||o||s?o?(document.ontouchend=function(){return t.handleButtonMouseUp()},document.ontouchcancel=function(){return t.handleButtonMouseUp()},this.keyboardDOM.ontouchstart=function(e){return t.handleKeyboardContainerMouseDown(e)}):o||(document.onmouseup=function(){return t.handleButtonMouseUp()},this.keyboardDOM.onmousedown=function(e){return t.handleKeyboardContainerMouseDown(e)}):(document.onpointerup=function(){return t.handleButtonMouseUp()},this.keyboardDOM.onpointerdown=function(e){return t.handleKeyboardContainerMouseDown(e)}),this.onInit())}}])&&Keyboard_defineProperties(t.prototype,e),n&&Keyboard_defineProperties(t,n),SimpleKeyboard}();e.default=s}])}));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2ltcGxlLWtleWJvYXJkL2J1aWxkL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NpbXBsZS1rZXlib2FyZC9idWlsZC9pbmRleC5qcz9kZDdmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogXG4gKiAgIHNpbXBsZS1rZXlib2FyZCB2Mi4yOS4yNFxuICogICBodHRwczovL2dpdGh1Yi5jb20vaG9kZ2VmL3NpbXBsZS1rZXlib2FyZFxuICogXG4gKiAgIENvcHlyaWdodCAoYykgRnJhbmNpc2NvIEhvZGdlIChodHRwczovL2dpdGh1Yi5jb20vaG9kZ2VmKVxuICogXG4gKiAgIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogICBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiAgIFxuICovXG4hZnVuY3Rpb24odCxlKXtcIm9iamVjdFwiPT09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcIlNpbXBsZUtleWJvYXJkXCIsW10sZSk6XCJvYmplY3RcIj09PXR5cGVvZiBleHBvcnRzP2V4cG9ydHMuU2ltcGxlS2V5Ym9hcmQ9ZSgpOnQuU2ltcGxlS2V5Ym9hcmQ9ZSgpfSh3aW5kb3csKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Z1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obil7aWYoZVtuXSlyZXR1cm4gZVtuXS5leHBvcnRzO3ZhciBvPWVbbl09e2k6bixsOiExLGV4cG9ydHM6e319O3JldHVybiB0W25dLmNhbGwoby5leHBvcnRzLG8sby5leHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pLG8ubD0hMCxvLmV4cG9ydHN9cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18ubT10LF9fd2VicGFja19yZXF1aXJlX18uYz1lLF9fd2VicGFja19yZXF1aXJlX18uZD1mdW5jdGlvbih0LGUsbil7X193ZWJwYWNrX3JlcXVpcmVfXy5vKHQsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2VudW1lcmFibGU6ITAsZ2V0Om59KX0sX193ZWJwYWNrX3JlcXVpcmVfXy5yPWZ1bmN0aW9uKHQpe1widW5kZWZpbmVkXCIhPT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxfX3dlYnBhY2tfcmVxdWlyZV9fLnQ9ZnVuY3Rpb24odCxlKXtpZigxJmUmJih0PV9fd2VicGFja19yZXF1aXJlX18odCkpLDgmZSlyZXR1cm4gdDtpZig0JmUmJlwib2JqZWN0XCI9PT10eXBlb2YgdCYmdCYmdC5fX2VzTW9kdWxlKXJldHVybiB0O3ZhciBuPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5yKG4pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLFwiZGVmYXVsdFwiLHtlbnVtZXJhYmxlOiEwLHZhbHVlOnR9KSwyJmUmJlwic3RyaW5nXCIhPXR5cGVvZiB0KWZvcih2YXIgbyBpbiB0KV9fd2VicGFja19yZXF1aXJlX18uZChuLG8sZnVuY3Rpb24oZSl7cmV0dXJuIHRbZV19LmJpbmQobnVsbCxvKSk7cmV0dXJuIG59LF9fd2VicGFja19yZXF1aXJlX18ubj1mdW5jdGlvbih0KXt2YXIgZT10JiZ0Ll9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gdC5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiB0fTtyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5kKGUsXCJhXCIsZSksZX0sX193ZWJwYWNrX3JlcXVpcmVfXy5vPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfSxfX3dlYnBhY2tfcmVxdWlyZV9fLnA9XCJcIixfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucz0wKX0oW2Z1bmN0aW9uKHQsZSxuKXt0LmV4cG9ydHM9bigyKX0sZnVuY3Rpb24odCxlLG4pe30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKTtuKDEpO2Z1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHQpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgU3ltYm9sfHxudWxsPT10W1N5bWJvbC5pdGVyYXRvcl0pe2lmKEFycmF5LmlzQXJyYXkodCl8fCh0PWZ1bmN0aW9uKHQsZSl7aWYoIXQpcmV0dXJuO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgdClyZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkodCxlKTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkuc2xpY2UoOCwtMSk7XCJPYmplY3RcIj09PW4mJnQuY29uc3RydWN0b3ImJihuPXQuY29uc3RydWN0b3IubmFtZSk7aWYoXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uKXJldHVybiBBcnJheS5mcm9tKHQpO2lmKFwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSlyZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkodCxlKX0odCkpKXt2YXIgZT0wLEY9ZnVuY3Rpb24oKXt9O3JldHVybntzOkYsbjpmdW5jdGlvbigpe3JldHVybiBlPj10Lmxlbmd0aD97ZG9uZTohMH06e2RvbmU6ITEsdmFsdWU6dFtlKytdfX0sZTpmdW5jdGlvbih0KXt0aHJvdyB0fSxmOkZ9fXRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX12YXIgbixvLGk9ITAscz0hMTtyZXR1cm57czpmdW5jdGlvbigpe249dFtTeW1ib2wuaXRlcmF0b3JdKCl9LG46ZnVuY3Rpb24oKXt2YXIgdD1uLm5leHQoKTtyZXR1cm4gaT10LmRvbmUsdH0sZTpmdW5jdGlvbih0KXtzPSEwLG89dH0sZjpmdW5jdGlvbigpe3RyeXtpfHxudWxsPT1uLnJldHVybnx8bi5yZXR1cm4oKX1maW5hbGx5e2lmKHMpdGhyb3cgb319fX1mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheSh0LGUpeyhudWxsPT1lfHxlPnQubGVuZ3RoKSYmKGU9dC5sZW5ndGgpO2Zvcih2YXIgbj0wLG89bmV3IEFycmF5KGUpO248ZTtuKyspb1tuXT10W25dO3JldHVybiBvfWZ1bmN0aW9uIF90eXBlb2YodCl7cmV0dXJuKF90eXBlb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0pKHQpfWZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgbz1mdW5jdGlvbigpe2Z1bmN0aW9uIFV0aWxpdGllcyh0KXt2YXIgZT10LmdldE9wdGlvbnMsbj10LmdldENhcmV0UG9zaXRpb24sbz10LmRpc3BhdGNoOyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsVXRpbGl0aWVzKSx0aGlzLmdldE9wdGlvbnM9ZSx0aGlzLmdldENhcmV0UG9zaXRpb249bix0aGlzLmRpc3BhdGNoPW8sVXRpbGl0aWVzLmJpbmRNZXRob2RzKFV0aWxpdGllcyx0aGlzKX12YXIgdCxlLG47cmV0dXJuIHQ9VXRpbGl0aWVzLG49W3trZXk6XCJiaW5kTWV0aG9kc1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG4sbz1fY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0LnByb3RvdHlwZSkpO3RyeXtmb3Ioby5zKCk7IShuPW8ubigpKS5kb25lOyl7dmFyIGk9bi52YWx1ZTtcImNvbnN0cnVjdG9yXCI9PT1pfHxcImJpbmRNZXRob2RzXCI9PT1pfHwoZVtpXT1lW2ldLmJpbmQoZSkpfX1jYXRjaChzKXtvLmUocyl9ZmluYWxseXtvLmYoKX19fV0sKGU9W3trZXk6XCJnZXRCdXR0b25DbGFzc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXQuaW5jbHVkZXMoXCJ7XCIpJiZ0LmluY2x1ZGVzKFwifVwiKSYmXCJ7Ly99XCIhPT10P1wiZnVuY3Rpb25CdG5cIjpcInN0YW5kYXJkQnRuXCIsbj10LnJlcGxhY2UoXCJ7XCIsXCJcIikucmVwbGFjZShcIn1cIixcIlwiKSxvPVwiXCI7cmV0dXJuXCJzdGFuZGFyZEJ0blwiIT09ZSYmKG89XCIgaGctYnV0dG9uLVwiLmNvbmNhdChuKSksXCJoZy1cIi5jb25jYXQoZSkuY29uY2F0KG8pfX0se2tleTpcImdldERlZmF1bHREaXBsYXlcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybntcIntia3NwfVwiOlwiYmFja3NwYWNlXCIsXCJ7YmFja3NwYWNlfVwiOlwiYmFja3NwYWNlXCIsXCJ7ZW50ZXJ9XCI6XCI8IGVudGVyXCIsXCJ7c2hpZnR9XCI6XCJzaGlmdFwiLFwie3NoaWZ0bGVmdH1cIjpcInNoaWZ0XCIsXCJ7c2hpZnRyaWdodH1cIjpcInNoaWZ0XCIsXCJ7YWx0fVwiOlwiYWx0XCIsXCJ7c31cIjpcInNoaWZ0XCIsXCJ7dGFifVwiOlwidGFiXCIsXCJ7bG9ja31cIjpcImNhcHNcIixcIntjYXBzbG9ja31cIjpcImNhcHNcIixcInthY2NlcHR9XCI6XCJTdWJtaXRcIixcIntzcGFjZX1cIjpcIiBcIixcInsvL31cIjpcIiBcIixcIntlc2N9XCI6XCJlc2NcIixcIntlc2NhcGV9XCI6XCJlc2NcIixcIntmMX1cIjpcImYxXCIsXCJ7ZjJ9XCI6XCJmMlwiLFwie2YzfVwiOlwiZjNcIixcIntmNH1cIjpcImY0XCIsXCJ7ZjV9XCI6XCJmNVwiLFwie2Y2fVwiOlwiZjZcIixcIntmN31cIjpcImY3XCIsXCJ7Zjh9XCI6XCJmOFwiLFwie2Y5fVwiOlwiZjlcIixcIntmMTB9XCI6XCJmMTBcIixcIntmMTF9XCI6XCJmMTFcIixcIntmMTJ9XCI6XCJmMTJcIixcIntudW1wYWRkaXZpZGV9XCI6XCIvXCIsXCJ7bnVtbG9ja31cIjpcImxvY2tcIixcInthcnJvd3VwfVwiOlwiXFx1MjE5MVwiLFwie2Fycm93bGVmdH1cIjpcIlxcdTIxOTBcIixcInthcnJvd2Rvd259XCI6XCJcXHUyMTkzXCIsXCJ7YXJyb3dyaWdodH1cIjpcIlxcdTIxOTJcIixcIntwcnRzY3J9XCI6XCJwcmludFwiLFwie3Njcm9sbGxvY2t9XCI6XCJzY3JvbGxcIixcIntwYXVzZX1cIjpcInBhdXNlXCIsXCJ7aW5zZXJ0fVwiOlwiaW5zXCIsXCJ7aG9tZX1cIjpcImhvbWVcIixcIntwYWdldXB9XCI6XCJ1cFwiLFwie2RlbGV0ZX1cIjpcImRlbFwiLFwie2VuZH1cIjpcImVuZFwiLFwie3BhZ2Vkb3dufVwiOlwiZG93blwiLFwie251bXBhZG11bHRpcGx5fVwiOlwiKlwiLFwie251bXBhZHN1YnRyYWN0fVwiOlwiLVwiLFwie251bXBhZGFkZH1cIjpcIitcIixcIntudW1wYWRlbnRlcn1cIjpcImVudGVyXCIsXCJ7cGVyaW9kfVwiOlwiLlwiLFwie251bXBhZGRlY2ltYWx9XCI6XCIuXCIsXCJ7bnVtcGFkMH1cIjpcIjBcIixcIntudW1wYWQxfVwiOlwiMVwiLFwie251bXBhZDJ9XCI6XCIyXCIsXCJ7bnVtcGFkM31cIjpcIjNcIixcIntudW1wYWQ0fVwiOlwiNFwiLFwie251bXBhZDV9XCI6XCI1XCIsXCJ7bnVtcGFkNn1cIjpcIjZcIixcIntudW1wYWQ3fVwiOlwiN1wiLFwie251bXBhZDh9XCI6XCI4XCIsXCJ7bnVtcGFkOX1cIjpcIjlcIn19fSx7a2V5OlwiZ2V0QnV0dG9uRGlzcGxheU5hbWVcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7cmV0dXJuKGU9bj9PYmplY3QuYXNzaWduKHt9LHRoaXMuZ2V0RGVmYXVsdERpcGxheSgpLGUpOmV8fHRoaXMuZ2V0RGVmYXVsdERpcGxheSgpKVt0XXx8dH19LHtrZXk6XCJnZXRVcGRhdGVkSW5wdXRcIix2YWx1ZTpmdW5jdGlvbih0LGUsbixvKXt2YXIgaT10aGlzLmdldE9wdGlvbnMoKSxzPWU7cmV0dXJuKFwie2Jrc3B9XCI9PT10fHxcIntiYWNrc3BhY2V9XCI9PT10KSYmcy5sZW5ndGg+MD9zPXRoaXMucmVtb3ZlQXQocyxuLG8pOlwie3NwYWNlfVwiPT09dD9zPXRoaXMuYWRkU3RyaW5nQXQocyxcIiBcIixuLG8pOlwie3RhYn1cIiE9PXR8fFwiYm9vbGVhblwiPT09dHlwZW9mIGkudGFiQ2hhck9uVGFiJiYhMT09PWkudGFiQ2hhck9uVGFiP1wie2VudGVyfVwiIT09dCYmXCJ7bnVtcGFkZW50ZXJ9XCIhPT10fHwhaS5uZXdMaW5lT25FbnRlcj90LmluY2x1ZGVzKFwibnVtcGFkXCIpJiZOdW1iZXIuaXNJbnRlZ2VyKE51bWJlcih0W3QubGVuZ3RoLTJdKSk/cz10aGlzLmFkZFN0cmluZ0F0KHMsdFt0Lmxlbmd0aC0yXSxuLG8pOlwie251bXBhZGRpdmlkZX1cIj09PXQ/cz10aGlzLmFkZFN0cmluZ0F0KHMsXCIvXCIsbixvKTpcIntudW1wYWRtdWx0aXBseX1cIj09PXQ/cz10aGlzLmFkZFN0cmluZ0F0KHMsXCIqXCIsbixvKTpcIntudW1wYWRzdWJ0cmFjdH1cIj09PXQ/cz10aGlzLmFkZFN0cmluZ0F0KHMsXCItXCIsbixvKTpcIntudW1wYWRhZGR9XCI9PT10P3M9dGhpcy5hZGRTdHJpbmdBdChzLFwiK1wiLG4sbyk6XCJ7bnVtcGFkZGVjaW1hbH1cIj09PXQ/cz10aGlzLmFkZFN0cmluZ0F0KHMsXCIuXCIsbixvKTpcIntcIj09PXR8fFwifVwiPT09dD9zPXRoaXMuYWRkU3RyaW5nQXQocyx0LG4sbyk6dC5pbmNsdWRlcyhcIntcIil8fHQuaW5jbHVkZXMoXCJ9XCIpfHwocz10aGlzLmFkZFN0cmluZ0F0KHMsdCxuLG8pKTpzPXRoaXMuYWRkU3RyaW5nQXQocyxcIlxcblwiLG4sbyk6cz10aGlzLmFkZFN0cmluZ0F0KHMsXCJcXHRcIixuLG8pLHN9fSx7a2V5OlwidXBkYXRlQ2FyZXRQb3NcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMudXBkYXRlQ2FyZXRQb3NBY3Rpb24odCxlKTt0aGlzLmRpc3BhdGNoKChmdW5jdGlvbih0KXt0LmNhcmV0UG9zaXRpb249bn0pKX19LHtrZXk6XCJ1cGRhdGVDYXJldFBvc0FjdGlvblwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXRPcHRpb25zKCksbz10aGlzLmdldENhcmV0UG9zaXRpb24oKTtyZXR1cm4gZT9vPjAmJihvLT10KTpvKz10LG4uZGVidWcmJmNvbnNvbGUubG9nKFwiQ2FyZXQgYXQ6XCIsbyxcIihcIi5jb25jYXQodGhpcy5rZXlib2FyZERPTUNsYXNzLFwiKVwiKSksb319LHtrZXk6XCJhZGRTdHJpbmdBdFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxuLG8pe3ZhciBpO3JldHVybiBufHwwPT09bj8oaT1bdC5zbGljZSgwLG4pLGUsdC5zbGljZShuKV0uam9pbihcIlwiKSx0aGlzLmlzTWF4TGVuZ3RoUmVhY2hlZCgpfHxvJiZ0aGlzLnVwZGF0ZUNhcmV0UG9zKGUubGVuZ3RoKSk6aT10K2UsaX19LHtrZXk6XCJyZW1vdmVBdFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgbztpZigwPT09dGhpcy5nZXRDYXJldFBvc2l0aW9uKCkpcmV0dXJuIHQ7dmFyIGk9LyhbXFx1RDgwMC1cXHVEQkZGXVtcXHVEQzAwLVxcdURGRkZdKS9nO3JldHVybiBlJiZlPj0wP3Quc3Vic3RyaW5nKGUtMixlKS5tYXRjaChpKT8obz10LnN1YnN0cigwLGUtMikrdC5zdWJzdHIoZSksbiYmdGhpcy51cGRhdGVDYXJldFBvcygyLCEwKSk6KG89dC5zdWJzdHIoMCxlLTEpK3Quc3Vic3RyKGUpLG4mJnRoaXMudXBkYXRlQ2FyZXRQb3MoMSwhMCkpOnQuc2xpY2UoLTIpLm1hdGNoKGkpPyhvPXQuc2xpY2UoMCwtMiksbiYmdGhpcy51cGRhdGVDYXJldFBvcygyLCEwKSk6KG89dC5zbGljZSgwLC0xKSxuJiZ0aGlzLnVwZGF0ZUNhcmV0UG9zKDEsITApKSxvfX0se2tleTpcImhhbmRsZU1heExlbmd0aFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5nZXRPcHRpb25zKCksbz1uLm1heExlbmd0aCxpPXRbbi5pbnB1dE5hbWVdLHM9ZS5sZW5ndGgtMT49bztpZihlLmxlbmd0aDw9aS5sZW5ndGgpcmV0dXJuITE7aWYoTnVtYmVyLmlzSW50ZWdlcihvKSlyZXR1cm4gbi5kZWJ1ZyYmY29uc29sZS5sb2coXCJtYXhMZW5ndGggKG51bSkgcmVhY2hlZDpcIixzKSxzPyh0aGlzLm1heExlbmd0aFJlYWNoZWQ9ITAsITApOih0aGlzLm1heExlbmd0aFJlYWNoZWQ9ITEsITEpO2lmKFwib2JqZWN0XCI9PT1fdHlwZW9mKG8pKXt2YXIgYT1pLmxlbmd0aD09PW9bbi5pbnB1dE5hbWVdO3JldHVybiBuLmRlYnVnJiZjb25zb2xlLmxvZyhcIm1heExlbmd0aCAob2JqKSByZWFjaGVkOlwiLGEpLGE/KHRoaXMubWF4TGVuZ3RoUmVhY2hlZD0hMCwhMCk6KHRoaXMubWF4TGVuZ3RoUmVhY2hlZD0hMSwhMSl9fX0se2tleTpcImlzTWF4TGVuZ3RoUmVhY2hlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4odGhpcy5tYXhMZW5ndGhSZWFjaGVkKX19LHtrZXk6XCJpc1RvdWNoRGV2aWNlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm5cIm9udG91Y2hzdGFydFwiaW4gd2luZG93fHxuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHN9fSx7a2V5OlwicG9pbnRlckV2ZW50c1N1cHBvcnRlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdy5Qb2ludGVyRXZlbnR9fSx7a2V5OlwiY2FtZWxDYXNlXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuISF0JiZ0LnRvTG93ZXJDYXNlKCkudHJpbSgpLnNwbGl0KC9bLlxcLV9cXHNdL2cpLnJlZHVjZSgoZnVuY3Rpb24odCxlKXtyZXR1cm4gZS5sZW5ndGg/dCtlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKTp0fSkpfX1dKSYmX2RlZmluZVByb3BlcnRpZXModC5wcm90b3R5cGUsZSksbiYmX2RlZmluZVByb3BlcnRpZXModCxuKSxVdGlsaXRpZXN9KCk7ZnVuY3Rpb24gUGh5c2ljYWxLZXlib2FyZF9kZWZpbmVQcm9wZXJ0aWVzKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgaT1mdW5jdGlvbigpe2Z1bmN0aW9uIFBoeXNpY2FsS2V5Ym9hcmQodCl7dmFyIGU9dC5kaXNwYXRjaCxuPXQuZ2V0T3B0aW9uczshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLFBoeXNpY2FsS2V5Ym9hcmQpLHRoaXMuZGlzcGF0Y2g9ZSx0aGlzLmdldE9wdGlvbnM9bixvLmJpbmRNZXRob2RzKFBoeXNpY2FsS2V5Ym9hcmQsdGhpcyl9dmFyIHQsZSxuO3JldHVybiB0PVBoeXNpY2FsS2V5Ym9hcmQsKGU9W3trZXk6XCJoYW5kbGVIaWdobGlnaHRLZXlEb3duXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRPcHRpb25zKCksbj10aGlzLmdldFNpbXBsZUtleWJvYXJkTGF5b3V0S2V5KHQpO3RoaXMuZGlzcGF0Y2goKGZ1bmN0aW9uKHQpe3ZhciBvPXQuZ2V0QnV0dG9uRWxlbWVudChuKXx8dC5nZXRCdXR0b25FbGVtZW50KFwie1wiLmNvbmNhdChuLFwifVwiKSk7byYmKG8uc3R5bGUuYmFja2dyb3VuZENvbG9yPWUucGh5c2ljYWxLZXlib2FyZEhpZ2hsaWdodEJnQ29sb3J8fFwiIzlhYjRkMFwiLG8uc3R5bGUuY29sb3I9ZS5waHlzaWNhbEtleWJvYXJkSGlnaGxpZ2h0VGV4dENvbG9yfHxcIndoaXRlXCIpfSkpfX0se2tleTpcImhhbmRsZUhpZ2hsaWdodEtleVVwXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRTaW1wbGVLZXlib2FyZExheW91dEtleSh0KTt0aGlzLmRpc3BhdGNoKChmdW5jdGlvbih0KXt2YXIgbj10LmdldEJ1dHRvbkVsZW1lbnQoZSl8fHQuZ2V0QnV0dG9uRWxlbWVudChcIntcIi5jb25jYXQoZSxcIn1cIikpO24mJm4ucmVtb3ZlQXR0cmlidXRlJiZuLnJlbW92ZUF0dHJpYnV0ZShcInN0eWxlXCIpfSkpfX0se2tleTpcImdldFNpbXBsZUtleWJvYXJkTGF5b3V0S2V5XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuKChlPXQuY29kZS5pbmNsdWRlcyhcIk51bXBhZFwiKXx8dC5jb2RlLmluY2x1ZGVzKFwiU2hpZnRcIil8fHQuY29kZS5pbmNsdWRlcyhcIlNwYWNlXCIpfHx0LmNvZGUuaW5jbHVkZXMoXCJCYWNrc3BhY2VcIil8fHQuY29kZS5pbmNsdWRlcyhcIkNvbnRyb2xcIil8fHQuY29kZS5pbmNsdWRlcyhcIkFsdFwiKXx8dC5jb2RlLmluY2x1ZGVzKFwiTWV0YVwiKT90LmNvZGU6dC5rZXkpIT09ZS50b1VwcGVyQ2FzZSgpfHxcIkZcIj09PXQuY29kZVswXSYmTnVtYmVyLmlzSW50ZWdlcihOdW1iZXIodC5jb2RlWzFdKSkmJnQuY29kZS5sZW5ndGg8PTMpJiYoZT1lLnRvTG93ZXJDYXNlKCkpLGV9fV0pJiZQaHlzaWNhbEtleWJvYXJkX2RlZmluZVByb3BlcnRpZXModC5wcm90b3R5cGUsZSksbiYmUGh5c2ljYWxLZXlib2FyZF9kZWZpbmVQcm9wZXJ0aWVzKHQsbiksUGh5c2ljYWxLZXlib2FyZH0oKTtmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkodCl7cmV0dXJuIGZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIEtleWJvYXJkX2FycmF5TGlrZVRvQXJyYXkodCl9KHQpfHxmdW5jdGlvbih0KXtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdCh0KSlyZXR1cm4gQXJyYXkuZnJvbSh0KX0odCl8fGZ1bmN0aW9uKHQsZSl7aWYoIXQpcmV0dXJuO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgdClyZXR1cm4gS2V5Ym9hcmRfYXJyYXlMaWtlVG9BcnJheSh0LGUpO3ZhciBuPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KS5zbGljZSg4LC0xKTtcIk9iamVjdFwiPT09biYmdC5jb25zdHJ1Y3RvciYmKG49dC5jb25zdHJ1Y3Rvci5uYW1lKTtpZihcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4pcmV0dXJuIEFycmF5LmZyb20odCk7aWYoXCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKXJldHVybiBLZXlib2FyZF9hcnJheUxpa2VUb0FycmF5KHQsZSl9KHQpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpfWZ1bmN0aW9uIEtleWJvYXJkX2FycmF5TGlrZVRvQXJyYXkodCxlKXsobnVsbD09ZXx8ZT50Lmxlbmd0aCkmJihlPXQubGVuZ3RoKTtmb3IodmFyIG49MCxvPW5ldyBBcnJheShlKTtuPGU7bisrKW9bbl09dFtuXTtyZXR1cm4gb31mdW5jdGlvbiBLZXlib2FyZF9jbGFzc0NhbGxDaGVjayh0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gS2V5Ym9hcmRfZGVmaW5lUHJvcGVydGllcyh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19ZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KHQsZSxuKXtyZXR1cm4gZSBpbiB0P09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3ZhbHVlOm4sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTp0W2VdPW4sdH12YXIgcz1mdW5jdGlvbigpe2Z1bmN0aW9uIFNpbXBsZUtleWJvYXJkKCl7dmFyIHQ9dGhpcztLZXlib2FyZF9jbGFzc0NhbGxDaGVjayh0aGlzLFNpbXBsZUtleWJvYXJkKSxfZGVmaW5lUHJvcGVydHkodGhpcyxcImhhbmRsZVBhcmFtc1wiLChmdW5jdGlvbih0KXt2YXIgZSxuLG87aWYoXCJzdHJpbmdcIj09PXR5cGVvZiB0WzBdKWU9dFswXS5zcGxpdChcIi5cIikuam9pbihcIlwiKSxuPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuXCIuY29uY2F0KGUpKSxvPXRbMV07ZWxzZSBpZih0WzBdaW5zdGFuY2VvZiBIVE1MRGl2RWxlbWVudCl7aWYoIXRbMF0uY2xhc3NOYW1lKXRocm93IGNvbnNvbGUud2FybihcIkFueSBET00gZWxlbWVudCBwYXNzZWQgYXMgcGFyYW1ldGVyIG11c3QgaGF2ZSBhIGNsYXNzLlwiKSxuZXcgRXJyb3IoXCJLRVlCT0FSRF9ET01fQ0xBU1NfRVJST1JcIik7ZT10WzBdLmNsYXNzTmFtZS5zcGxpdChcIiBcIilbMF0sbj10WzBdLG89dFsxXX1lbHNlIGU9XCJzaW1wbGUta2V5Ym9hcmRcIixuPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuXCIuY29uY2F0KGUpKSxvPXRbMF07cmV0dXJue2tleWJvYXJkRE9NQ2xhc3M6ZSxrZXlib2FyZERPTTpuLG9wdGlvbnM6b319KSksX2RlZmluZVByb3BlcnR5KHRoaXMsXCJnZXRPcHRpb25zXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQub3B0aW9uc30pKSxfZGVmaW5lUHJvcGVydHkodGhpcyxcImdldENhcmV0UG9zaXRpb25cIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5jYXJldFBvc2l0aW9ufSkpLF9kZWZpbmVQcm9wZXJ0eSh0aGlzLFwicmVnaXN0ZXJNb2R1bGVcIiwoZnVuY3Rpb24oZSxuKXt0Lm1vZHVsZXNbZV18fCh0Lm1vZHVsZXNbZV09e30pLG4odC5tb2R1bGVzW2VdKX0pKSxfZGVmaW5lUHJvcGVydHkodGhpcyxcImdldEtleWJvYXJkQ2xhc3NTdHJpbmdcIiwoZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheShlKSxvPTA7bzxlO28rKyluW29dPWFyZ3VtZW50c1tvXTt2YXIgaT1bdC5rZXlib2FyZERPTUNsYXNzXS5jb25jYXQobikuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hIXR9KSk7cmV0dXJuIGkuam9pbihcIiBcIil9KSk7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkoZSkscz0wO3M8ZTtzKyspbltzXT1hcmd1bWVudHNbc107dmFyIGE9dGhpcy5oYW5kbGVQYXJhbXMobikscj1hLmtleWJvYXJkRE9NQ2xhc3MsdT1hLmtleWJvYXJkRE9NLGM9YS5vcHRpb25zLGw9dm9pZCAwPT09Yz97fTpjO2lmKHRoaXMudXRpbGl0aWVzPW5ldyBvKHtnZXRPcHRpb25zOnRoaXMuZ2V0T3B0aW9ucyxnZXRDYXJldFBvc2l0aW9uOnRoaXMuZ2V0Q2FyZXRQb3NpdGlvbixkaXNwYXRjaDp0aGlzLmRpc3BhdGNofSksdGhpcy5jYXJldFBvc2l0aW9uPW51bGwsdGhpcy5rZXlib2FyZERPTT11LHRoaXMub3B0aW9ucz1sLHRoaXMub3B0aW9ucy5sYXlvdXROYW1lPXRoaXMub3B0aW9ucy5sYXlvdXROYW1lfHxcImRlZmF1bHRcIix0aGlzLm9wdGlvbnMudGhlbWU9dGhpcy5vcHRpb25zLnRoZW1lfHxcImhnLXRoZW1lLWRlZmF1bHRcIix0aGlzLm9wdGlvbnMuaW5wdXROYW1lPXRoaXMub3B0aW9ucy5pbnB1dE5hbWV8fFwiZGVmYXVsdFwiLHRoaXMub3B0aW9ucy5wcmV2ZW50TW91c2VEb3duRGVmYXVsdD10aGlzLm9wdGlvbnMucHJldmVudE1vdXNlRG93bkRlZmF1bHR8fCExLHRoaXMua2V5Ym9hcmRQbHVnaW5DbGFzc2VzPVwiXCIsby5iaW5kTWV0aG9kcyhTaW1wbGVLZXlib2FyZCx0aGlzKSx0aGlzLmlucHV0PXt9LHRoaXMuaW5wdXRbdGhpcy5vcHRpb25zLmlucHV0TmFtZV09XCJcIix0aGlzLmtleWJvYXJkRE9NQ2xhc3M9cix0aGlzLmJ1dHRvbkVsZW1lbnRzPXt9LHdpbmRvdy5TaW1wbGVLZXlib2FyZEluc3RhbmNlc3x8KHdpbmRvdy5TaW1wbGVLZXlib2FyZEluc3RhbmNlcz17fSksdGhpcy5jdXJyZW50SW5zdGFuY2VOYW1lPXRoaXMudXRpbGl0aWVzLmNhbWVsQ2FzZSh0aGlzLmtleWJvYXJkRE9NQ2xhc3MpLHdpbmRvdy5TaW1wbGVLZXlib2FyZEluc3RhbmNlc1t0aGlzLmN1cnJlbnRJbnN0YW5jZU5hbWVdPXRoaXMsdGhpcy5hbGxLZXlib2FyZEluc3RhbmNlcz13aW5kb3cuU2ltcGxlS2V5Ym9hcmRJbnN0YW5jZXMsdGhpcy5rZXlib2FyZEluc3RhbmNlTmFtZXM9T2JqZWN0LmtleXMod2luZG93LlNpbXBsZUtleWJvYXJkSW5zdGFuY2VzKSx0aGlzLmlzRmlyc3RLZXlib2FyZEluc3RhbmNlPXRoaXMua2V5Ym9hcmRJbnN0YW5jZU5hbWVzWzBdPT09dGhpcy5jdXJyZW50SW5zdGFuY2VOYW1lLHRoaXMucGh5c2ljYWxLZXlib2FyZD1uZXcgaSh7ZGlzcGF0Y2g6dGhpcy5kaXNwYXRjaCxnZXRPcHRpb25zOnRoaXMuZ2V0T3B0aW9uc30pLCF0aGlzLmtleWJvYXJkRE9NKXRocm93IGNvbnNvbGUud2FybignXCIuJy5jb25jYXQociwnXCIgd2FzIG5vdCBmb3VuZCBpbiB0aGUgRE9NLicpKSxuZXcgRXJyb3IoXCJLRVlCT0FSRF9ET01fRVJST1JcIik7dGhpcy5yZW5kZXIoKSx0aGlzLm1vZHVsZXM9e30sdGhpcy5sb2FkTW9kdWxlcygpfXZhciB0LGUsbjtyZXR1cm4gdD1TaW1wbGVLZXlib2FyZCwoZT1be2tleTpcImhhbmRsZUJ1dHRvbkNsaWNrZWRcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm9wdGlvbnMuZGVidWc7aWYoXCJ7Ly99XCI9PT10KXJldHVybiExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB0aGlzLm9wdGlvbnMub25LZXlQcmVzcyYmdGhpcy5vcHRpb25zLm9uS2V5UHJlc3ModCksdGhpcy5pbnB1dFt0aGlzLm9wdGlvbnMuaW5wdXROYW1lXXx8KHRoaXMuaW5wdXRbdGhpcy5vcHRpb25zLmlucHV0TmFtZV09XCJcIik7dmFyIG49dGhpcy51dGlsaXRpZXMuZ2V0VXBkYXRlZElucHV0KHQsdGhpcy5pbnB1dFt0aGlzLm9wdGlvbnMuaW5wdXROYW1lXSx0aGlzLmNhcmV0UG9zaXRpb24pO2lmKHRoaXMuaW5wdXRbdGhpcy5vcHRpb25zLmlucHV0TmFtZV0hPT1uJiYoIXRoaXMub3B0aW9ucy5pbnB1dFBhdHRlcm58fHRoaXMub3B0aW9ucy5pbnB1dFBhdHRlcm4mJnRoaXMuaW5wdXRQYXR0ZXJuSXNWYWxpZChuKSkpe2lmKHRoaXMub3B0aW9ucy5tYXhMZW5ndGgmJnRoaXMudXRpbGl0aWVzLmhhbmRsZU1heExlbmd0aCh0aGlzLmlucHV0LG4pKXJldHVybiExO3RoaXMuaW5wdXRbdGhpcy5vcHRpb25zLmlucHV0TmFtZV09dGhpcy51dGlsaXRpZXMuZ2V0VXBkYXRlZElucHV0KHQsdGhpcy5pbnB1dFt0aGlzLm9wdGlvbnMuaW5wdXROYW1lXSx0aGlzLmNhcmV0UG9zaXRpb24sITApLGUmJmNvbnNvbGUubG9nKFwiSW5wdXQgY2hhbmdlZDpcIix0aGlzLmlucHV0KSx0aGlzLm9wdGlvbnMuc3luY0luc3RhbmNlSW5wdXRzJiZ0aGlzLnN5bmNJbnN0YW5jZUlucHV0cygpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiB0aGlzLm9wdGlvbnMub25DaGFuZ2UmJnRoaXMub3B0aW9ucy5vbkNoYW5nZSh0aGlzLmlucHV0W3RoaXMub3B0aW9ucy5pbnB1dE5hbWVdKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgdGhpcy5vcHRpb25zLm9uQ2hhbmdlQWxsJiZ0aGlzLm9wdGlvbnMub25DaGFuZ2VBbGwodGhpcy5pbnB1dCl9ZSYmY29uc29sZS5sb2coXCJLZXkgcHJlc3NlZDpcIix0KX19LHtrZXk6XCJoYW5kbGVCdXR0b25Nb3VzZURvd25cIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7dGhpcy5vcHRpb25zLnByZXZlbnRNb3VzZURvd25EZWZhdWx0JiZlLnByZXZlbnREZWZhdWx0KCksdGhpcy5vcHRpb25zLnN0b3BNb3VzZURvd25Qcm9wYWdhdGlvbiYmZS5zdG9wUHJvcGFnYXRpb24oKSxlJiZlLnRhcmdldC5jbGFzc0xpc3QuYWRkKHRoaXMuYWN0aXZlQnV0dG9uQ2xhc3MpLHRoaXMuaXNNb3VzZUhvbGQ9ITAsdGhpcy5ob2xkSW50ZXJhY3Rpb25UaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy5ob2xkSW50ZXJhY3Rpb25UaW1lb3V0KSx0aGlzLmhvbGRUaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy5ob2xkVGltZW91dCksdGhpcy5vcHRpb25zLmRpc2FibGVCdXR0b25Ib2xkfHwodGhpcy5ob2xkVGltZW91dD1zZXRUaW1lb3V0KChmdW5jdGlvbigpeyhuLmlzTW91c2VIb2xkJiYoIXQuaW5jbHVkZXMoXCJ7XCIpJiYhdC5pbmNsdWRlcyhcIn1cIil8fFwie2RlbGV0ZX1cIj09PXR8fFwie2JhY2tzcGFjZX1cIj09PXR8fFwie2Jrc3B9XCI9PT10fHxcIntzcGFjZX1cIj09PXR8fFwie3RhYn1cIj09PXQpfHxcInthcnJvd3JpZ2h0fVwiPT09dHx8XCJ7YXJyb3dsZWZ0fVwiPT09dHx8XCJ7YXJyb3d1cH1cIj09PXR8fFwie2Fycm93ZG93bn1cIj09PXQpJiYobi5vcHRpb25zLmRlYnVnJiZjb25zb2xlLmxvZyhcIkJ1dHRvbiBoZWxkOlwiLHQpLG4uaGFuZGxlQnV0dG9uSG9sZCh0LGUpKSxjbGVhclRpbWVvdXQobi5ob2xkVGltZW91dCl9KSw1MDApKX19LHtrZXk6XCJoYW5kbGVCdXR0b25Nb3VzZVVwXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLnJlY3Vyc2VCdXR0b25zKChmdW5jdGlvbih0KXt0LmNsYXNzTGlzdC5yZW1vdmUoZS5hY3RpdmVCdXR0b25DbGFzcyl9KSksdGhpcy5pc01vdXNlSG9sZD0hMSx0aGlzLmhvbGRJbnRlcmFjdGlvblRpbWVvdXQmJmNsZWFyVGltZW91dCh0aGlzLmhvbGRJbnRlcmFjdGlvblRpbWVvdXQpLHQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB0aGlzLm9wdGlvbnMub25LZXlSZWxlYXNlZCYmdGhpcy5vcHRpb25zLm9uS2V5UmVsZWFzZWQodCl9fSx7a2V5OlwiaGFuZGxlS2V5Ym9hcmRDb250YWluZXJNb3VzZURvd25cIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLm9wdGlvbnMucHJldmVudE1vdXNlRG93bkRlZmF1bHQmJnQucHJldmVudERlZmF1bHQoKX19LHtrZXk6XCJoYW5kbGVCdXR0b25Ib2xkXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLmhvbGRJbnRlcmFjdGlvblRpbWVvdXQmJmNsZWFyVGltZW91dCh0aGlzLmhvbGRJbnRlcmFjdGlvblRpbWVvdXQpLHRoaXMuaG9sZEludGVyYWN0aW9uVGltZW91dD1zZXRUaW1lb3V0KChmdW5jdGlvbigpe2UuaXNNb3VzZUhvbGQ/KGUuaGFuZGxlQnV0dG9uQ2xpY2tlZCh0KSxlLmhhbmRsZUJ1dHRvbkhvbGQodCkpOmNsZWFyVGltZW91dChlLmhvbGRJbnRlcmFjdGlvblRpbWVvdXQpfSksMTAwKX19LHtrZXk6XCJzeW5jSW5zdGFuY2VJbnB1dHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5kaXNwYXRjaCgoZnVuY3Rpb24oZSl7ZS5yZXBsYWNlSW5wdXQodC5pbnB1dCksZS5jYXJldFBvc2l0aW9uPXQuY2FyZXRQb3NpdGlvbn0pKX19LHtrZXk6XCJjbGVhcklucHV0XCIsdmFsdWU6ZnVuY3Rpb24odCl7dD10fHx0aGlzLm9wdGlvbnMuaW5wdXROYW1lLHRoaXMuaW5wdXRbdF09XCJcIix0aGlzLmNhcmV0UG9zaXRpb249MCx0aGlzLm9wdGlvbnMuc3luY0luc3RhbmNlSW5wdXRzJiZ0aGlzLnN5bmNJbnN0YW5jZUlucHV0cygpfX0se2tleTpcImdldElucHV0XCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8dGhpcy5vcHRpb25zLmlucHV0TmFtZSx0aGlzLm9wdGlvbnMuc3luY0luc3RhbmNlSW5wdXRzJiZ0aGlzLnN5bmNJbnN0YW5jZUlucHV0cygpLHRoaXMuaW5wdXRbdF19fSx7a2V5Olwic2V0SW5wdXRcIix2YWx1ZTpmdW5jdGlvbih0LGUpe2U9ZXx8dGhpcy5vcHRpb25zLmlucHV0TmFtZSx0aGlzLmlucHV0W2VdPXQsdGhpcy5vcHRpb25zLnN5bmNJbnN0YW5jZUlucHV0cyYmdGhpcy5zeW5jSW5zdGFuY2VJbnB1dHMoKX19LHtrZXk6XCJyZXBsYWNlSW5wdXRcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLmlucHV0PXR9fSx7a2V5Olwic2V0T3B0aW9uc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LGU9dGhpcy5jaGFuZ2VkT3B0aW9ucyh0KTt0aGlzLm9wdGlvbnM9T2JqZWN0LmFzc2lnbih0aGlzLm9wdGlvbnMsdCksZS5sZW5ndGgmJih0aGlzLm9wdGlvbnMuZGVidWcmJmNvbnNvbGUubG9nKFwiY2hhbmdlZE9wdGlvbnNcIixlKSx0aGlzLm9uU2V0T3B0aW9ucyh0KSx0aGlzLnJlbmRlcigpKX19LHtrZXk6XCJjaGFuZ2VkT3B0aW9uc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZpbHRlcigoZnVuY3Rpb24obil7cmV0dXJuIEpTT04uc3RyaW5naWZ5KHRbbl0pIT09SlNPTi5zdHJpbmdpZnkoZS5vcHRpb25zW25dKX0pKX19LHtrZXk6XCJvblNldE9wdGlvbnNcIix2YWx1ZTpmdW5jdGlvbih0KXt0LmlucHV0TmFtZSYmKHRoaXMub3B0aW9ucy5kZWJ1ZyYmY29uc29sZS5sb2coXCJpbnB1dE5hbWUgY2hhbmdlZC4gY2FyZXRQb3NpdGlvbiByZXNldC5cIiksdGhpcy5jYXJldFBvc2l0aW9uPW51bGwpfX0se2tleTpcImNsZWFyXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmtleWJvYXJkRE9NLmlubmVySFRNTD1cIlwiLHRoaXMua2V5Ym9hcmRET00uY2xhc3NOYW1lPXRoaXMua2V5Ym9hcmRET01DbGFzcyx0aGlzLmJ1dHRvbkVsZW1lbnRzPXt9fX0se2tleTpcImRpc3BhdGNoXCIsdmFsdWU6ZnVuY3Rpb24odCl7aWYoIXdpbmRvdy5TaW1wbGVLZXlib2FyZEluc3RhbmNlcyl0aHJvdyBjb25zb2xlLndhcm4oXCJTaW1wbGVLZXlib2FyZEluc3RhbmNlcyBpcyBub3QgZGVmaW5lZC4gRGlzcGF0Y2ggY2Fubm90IGJlIGNhbGxlZC5cIiksbmV3IEVycm9yKFwiSU5TVEFOQ0VTX1ZBUl9FUlJPUlwiKTtyZXR1cm4gT2JqZWN0LmtleXMod2luZG93LlNpbXBsZUtleWJvYXJkSW5zdGFuY2VzKS5mb3JFYWNoKChmdW5jdGlvbihlKXt0KHdpbmRvdy5TaW1wbGVLZXlib2FyZEluc3RhbmNlc1tlXSxlKX0pKX19LHtrZXk6XCJhZGRCdXR0b25UaGVtZVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztpZighZXx8IXQpcmV0dXJuITE7dC5zcGxpdChcIiBcIikuZm9yRWFjaCgoZnVuY3Rpb24obyl7ZS5zcGxpdChcIiBcIikuZm9yRWFjaCgoZnVuY3Rpb24oZSl7bi5vcHRpb25zLmJ1dHRvblRoZW1lfHwobi5vcHRpb25zLmJ1dHRvblRoZW1lPVtdKTt2YXIgaT0hMTtuLm9wdGlvbnMuYnV0dG9uVGhlbWUubWFwKChmdW5jdGlvbih0KXtpZih0LmNsYXNzLnNwbGl0KFwiIFwiKS5pbmNsdWRlcyhlKSl7aT0hMDt2YXIgbj10LmJ1dHRvbnMuc3BsaXQoXCIgXCIpO24uaW5jbHVkZXMobyl8fChpPSEwLG4ucHVzaChvKSx0LmJ1dHRvbnM9bi5qb2luKFwiIFwiKSl9cmV0dXJuIHR9KSksaXx8bi5vcHRpb25zLmJ1dHRvblRoZW1lLnB1c2goe2NsYXNzOmUsYnV0dG9uczp0fSl9KSl9KSksdGhpcy5yZW5kZXIoKX19LHtrZXk6XCJyZW1vdmVCdXR0b25UaGVtZVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztpZighdCYmIWUpcmV0dXJuIHRoaXMub3B0aW9ucy5idXR0b25UaGVtZT1bXSx0aGlzLnJlbmRlcigpLCExO3QmJkFycmF5LmlzQXJyYXkodGhpcy5vcHRpb25zLmJ1dHRvblRoZW1lKSYmdGhpcy5vcHRpb25zLmJ1dHRvblRoZW1lLmxlbmd0aCYmKHQuc3BsaXQoXCIgXCIpLmZvckVhY2goKGZ1bmN0aW9uKHQpe24ub3B0aW9ucy5idXR0b25UaGVtZS5tYXAoKGZ1bmN0aW9uKG8saSl7aWYoZSYmZS5pbmNsdWRlcyhvLmNsYXNzKXx8IWUpe3ZhciBzPW8uYnV0dG9ucy5zcGxpdChcIiBcIikuZmlsdGVyKChmdW5jdGlvbihlKXtyZXR1cm4gZSE9PXR9KSk7cy5sZW5ndGg/by5idXR0b25zPXMuam9pbihcIiBcIik6KG4ub3B0aW9ucy5idXR0b25UaGVtZS5zcGxpY2UoaSwxKSxvPW51bGwpfXJldHVybiBvfSkpfSkpLHRoaXMucmVuZGVyKCkpfX0se2tleTpcImdldEJ1dHRvbkVsZW1lbnRcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMuYnV0dG9uRWxlbWVudHNbdF07cmV0dXJuIG4mJihlPW4ubGVuZ3RoPjE/bjpuWzBdKSxlfX0se2tleTpcImlucHV0UGF0dGVybklzVmFsaWRcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMub3B0aW9ucy5pbnB1dFBhdHRlcm47aWYoKGU9biBpbnN0YW5jZW9mIFJlZ0V4cD9uOm5bdGhpcy5vcHRpb25zLmlucHV0TmFtZV0pJiZ0KXt2YXIgbz1lLnRlc3QodCk7cmV0dXJuIHRoaXMub3B0aW9ucy5kZWJ1ZyYmY29uc29sZS5sb2coJ2lucHV0UGF0dGVybiAoXCInLmNvbmNhdChlLCdcIik6ICcpLmNvbmNhdChvP1wicGFzc2VkXCI6XCJkaWQgbm90IHBhc3MhXCIpKSxvfXJldHVybiEwfX0se2tleTpcInNldEV2ZW50TGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXshdGhpcy5pc0ZpcnN0S2V5Ym9hcmRJbnN0YW5jZSYmdGhpcy5hbGxLZXlib2FyZEluc3RhbmNlc3x8KHRoaXMub3B0aW9ucy5kZWJ1ZyYmY29uc29sZS5sb2coXCJDYXJldCBoYW5kbGluZyBzdGFydGVkIChcIi5jb25jYXQodGhpcy5rZXlib2FyZERPTUNsYXNzLFwiKVwiKSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsdGhpcy5oYW5kbGVLZXlVcCksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIix0aGlzLmhhbmRsZUtleURvd24pLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsdGhpcy5oYW5kbGVNb3VzZVVwKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIix0aGlzLmhhbmRsZVRvdWNoRW5kKSl9fSx7a2V5OlwiaGFuZGxlS2V5VXBcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLmNhcmV0RXZlbnRIYW5kbGVyKHQpLHRoaXMub3B0aW9ucy5waHlzaWNhbEtleWJvYXJkSGlnaGxpZ2h0JiZ0aGlzLnBoeXNpY2FsS2V5Ym9hcmQuaGFuZGxlSGlnaGxpZ2h0S2V5VXAodCl9fSx7a2V5OlwiaGFuZGxlS2V5RG93blwiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMub3B0aW9ucy5waHlzaWNhbEtleWJvYXJkSGlnaGxpZ2h0JiZ0aGlzLnBoeXNpY2FsS2V5Ym9hcmQuaGFuZGxlSGlnaGxpZ2h0S2V5RG93bih0KX19LHtrZXk6XCJoYW5kbGVNb3VzZVVwXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5jYXJldEV2ZW50SGFuZGxlcih0KX19LHtrZXk6XCJoYW5kbGVUb3VjaEVuZFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMuY2FyZXRFdmVudEhhbmRsZXIodCl9fSx7a2V5OlwiY2FyZXRFdmVudEhhbmRsZXJcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZTt0LnRhcmdldC50YWdOYW1lJiYoZT10LnRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkpLHRoaXMuZGlzcGF0Y2goKGZ1bmN0aW9uKG4pe24uaXNNb3VzZUhvbGQmJihuLmlzTW91c2VIb2xkPSExKSxcInRleHRhcmVhXCIhPT1lJiZcImlucHV0XCIhPT1lfHxuLm9wdGlvbnMuZGlzYWJsZUNhcmV0UG9zaXRpb25pbmc/bi5vcHRpb25zLmRpc2FibGVDYXJldFBvc2l0aW9uaW5nJiYobi5jYXJldFBvc2l0aW9uPW51bGwpOihuLmNhcmV0UG9zaXRpb249dC50YXJnZXQuc2VsZWN0aW9uU3RhcnQsbi5vcHRpb25zLmRlYnVnJiZjb25zb2xlLmxvZyhcIkNhcmV0IGF0OiBcIix0LnRhcmdldC5zZWxlY3Rpb25TdGFydCx0LnRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCksXCIoXCIuY29uY2F0KG4ua2V5Ym9hcmRET01DbGFzcyxcIilcIikpKX0pKX19LHtrZXk6XCJyZWN1cnNlQnV0dG9uc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoIXQpcmV0dXJuITE7T2JqZWN0LmtleXModGhpcy5idXR0b25FbGVtZW50cykuZm9yRWFjaCgoZnVuY3Rpb24obil7cmV0dXJuIGUuYnV0dG9uRWxlbWVudHNbbl0uZm9yRWFjaCh0KX0pKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbnMuZGVidWcmJmNvbnNvbGUubG9nKFwiRGVzdHJveWluZyBzaW1wbGUta2V5Ym9hcmQgaW5zdGFuY2U6IFwiLmNvbmNhdCh0aGlzLmN1cnJlbnRJbnN0YW5jZU5hbWUpKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5dXBcIix0aGlzLmhhbmRsZUtleVVwKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLHRoaXMuaGFuZGxlS2V5RG93biksZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIix0aGlzLmhhbmRsZU1vdXNlVXApLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLHRoaXMuaGFuZGxlVG91Y2hFbmQpLGRvY3VtZW50Lm9ucG9pbnRlcnVwPW51bGwsZG9jdW1lbnQub250b3VjaGVuZD1udWxsLGRvY3VtZW50Lm9udG91Y2hjYW5jZWw9bnVsbCxkb2N1bWVudC5vbm1vdXNldXA9bnVsbDt2YXIgZGVsZXRlQnV0dG9uPWZ1bmN0aW9uKHQpe3Qub25wb2ludGVyZG93bj1udWxsLHQub25wb2ludGVydXA9bnVsbCx0Lm9ucG9pbnRlcmNhbmNlbD1udWxsLHQub250b3VjaHN0YXJ0PW51bGwsdC5vbnRvdWNoZW5kPW51bGwsdC5vbnRvdWNoY2FuY2VsPW51bGwsdC5vbmNsaWNrPW51bGwsdC5vbm1vdXNlZG93bj1udWxsLHQub25tb3VzZXVwPW51bGwsdC5yZW1vdmUoKSx0PW51bGx9O3RoaXMucmVjdXJzZUJ1dHRvbnMoZGVsZXRlQnV0dG9uKSx0aGlzLnJlY3Vyc2VCdXR0b25zPW51bGwsZGVsZXRlQnV0dG9uPW51bGwsdGhpcy5rZXlib2FyZERPTS5vbnBvaW50ZXJkb3duPW51bGwsdGhpcy5rZXlib2FyZERPTS5vbnRvdWNoc3RhcnQ9bnVsbCx0aGlzLmtleWJvYXJkRE9NLm9ubW91c2Vkb3duPW51bGwsdGhpcy5jbGVhcigpLHdpbmRvdy5TaW1wbGVLZXlib2FyZEluc3RhbmNlc1t0aGlzLmN1cnJlbnRJbnN0YW5jZU5hbWVdPW51bGwsZGVsZXRlIHdpbmRvdy5TaW1wbGVLZXlib2FyZEluc3RhbmNlc1t0aGlzLmN1cnJlbnRJbnN0YW5jZU5hbWVdLHRoaXMuaW5pdGlhbGl6ZWQ9ITF9fSx7a2V5OlwiZ2V0QnV0dG9uVGhlbWVDbGFzc2VzXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5vcHRpb25zLmJ1dHRvblRoZW1lLG49W107cmV0dXJuIEFycmF5LmlzQXJyYXkoZSkmJmUuZm9yRWFjaCgoZnVuY3Rpb24oZSl7aWYoZS5jbGFzcyYmXCJzdHJpbmdcIj09PXR5cGVvZiBlLmNsYXNzJiZlLmJ1dHRvbnMmJlwic3RyaW5nXCI9PT10eXBlb2YgZS5idXR0b25zKXt2YXIgbz1lLmNsYXNzLnNwbGl0KFwiIFwiKTtlLmJ1dHRvbnMuc3BsaXQoXCIgXCIpLmluY2x1ZGVzKHQpJiYobj1bXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KG4pLF90b0NvbnN1bWFibGVBcnJheShvKSkpfWVsc2UgY29uc29sZS53YXJuKCdJbmNvcnJlY3QgXCJidXR0b25UaGVtZVwiLiBQbGVhc2UgY2hlY2sgdGhlIGRvY3VtZW50YXRpb24uJyxlKX0pKSxufX0se2tleTpcInNldERPTUJ1dHRvbkF0dHJpYnV0ZXNcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMub3B0aW9ucy5idXR0b25BdHRyaWJ1dGVzO0FycmF5LmlzQXJyYXkobikmJm4uZm9yRWFjaCgoZnVuY3Rpb24obil7bi5hdHRyaWJ1dGUmJlwic3RyaW5nXCI9PT10eXBlb2Ygbi5hdHRyaWJ1dGUmJm4udmFsdWUmJlwic3RyaW5nXCI9PT10eXBlb2Ygbi52YWx1ZSYmbi5idXR0b25zJiZcInN0cmluZ1wiPT09dHlwZW9mIG4uYnV0dG9ucz9uLmJ1dHRvbnMuc3BsaXQoXCIgXCIpLmluY2x1ZGVzKHQpJiZlKG4uYXR0cmlidXRlLG4udmFsdWUpOmNvbnNvbGUud2FybignSW5jb3JyZWN0IFwiYnV0dG9uQXR0cmlidXRlc1wiLiBQbGVhc2UgY2hlY2sgdGhlIGRvY3VtZW50YXRpb24uJyxuKX0pKX19LHtrZXk6XCJvblRvdWNoRGV2aWNlRGV0ZWN0ZWRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMucHJvY2Vzc0F1dG9Ub3VjaEV2ZW50cygpLHRoaXMuZGlzYWJsZUNvbnRleHR1YWxXaW5kb3coKX19LHtrZXk6XCJkaXNhYmxlQ29udGV4dHVhbFdpbmRvd1wiLHZhbHVlOmZ1bmN0aW9uKCl7d2luZG93Lm9uY29udGV4dG1lbnU9ZnVuY3Rpb24odCl7aWYodC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaGctYnV0dG9uXCIpKXJldHVybiB0LnByZXZlbnREZWZhdWx0KCksdC5zdG9wUHJvcGFnYXRpb24oKSwhMX19fSx7a2V5OlwicHJvY2Vzc0F1dG9Ub3VjaEV2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zLmF1dG9Vc2VUb3VjaEV2ZW50cyYmKHRoaXMub3B0aW9ucy51c2VUb3VjaEV2ZW50cz0hMCx0aGlzLm9wdGlvbnMuZGVidWcmJmNvbnNvbGUubG9nKFwiYXV0b1VzZVRvdWNoRXZlbnRzOiBUb3VjaCBkZXZpY2UgZGV0ZWN0ZWQsIHVzZVRvdWNoRXZlbnRzIGVuYWJsZWQuXCIpKX19LHtrZXk6XCJvbkluaXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5kZWJ1ZyYmY29uc29sZS5sb2coXCJcIi5jb25jYXQodGhpcy5rZXlib2FyZERPTUNsYXNzLFwiIEluaXRpYWxpemVkXCIpKSx0aGlzLnNldEV2ZW50TGlzdGVuZXJzKCksXCJmdW5jdGlvblwiPT09dHlwZW9mIHRoaXMub3B0aW9ucy5vbkluaXQmJnRoaXMub3B0aW9ucy5vbkluaXQoKX19LHtrZXk6XCJiZWZvcmVGaXJzdFJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy51dGlsaXRpZXMuaXNUb3VjaERldmljZSgpJiZ0aGlzLm9uVG91Y2hEZXZpY2VEZXRlY3RlZCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiB0aGlzLm9wdGlvbnMuYmVmb3JlRmlyc3RSZW5kZXImJnRoaXMub3B0aW9ucy5iZWZvcmVGaXJzdFJlbmRlcigpLHRoaXMuaXNGaXJzdEtleWJvYXJkSW5zdGFuY2UmJnRoaXMudXRpbGl0aWVzLnBvaW50ZXJFdmVudHNTdXBwb3J0ZWQoKSYmIXRoaXMub3B0aW9ucy51c2VUb3VjaEV2ZW50cyYmIXRoaXMub3B0aW9ucy51c2VNb3VzZUV2ZW50cyYmdGhpcy5vcHRpb25zLmRlYnVnJiZjb25zb2xlLmxvZyhcIlVzaW5nIFBvaW50ZXJFdmVudHMgYXMgaXQgaXMgc3VwcG9ydGVkIGJ5IHRoaXMgYnJvd3NlclwiKSx0aGlzLm9wdGlvbnMudXNlVG91Y2hFdmVudHMmJnRoaXMub3B0aW9ucy5kZWJ1ZyYmY29uc29sZS5sb2coXCJ1c2VUb3VjaEV2ZW50cyBoYXMgYmVlbiBlbmFibGVkLiBPbmx5IHRvdWNoIGV2ZW50cyB3aWxsIGJlIHVzZWQuXCIpfX0se2tleTpcImJlZm9yZVJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiPT09dHlwZW9mIHRoaXMub3B0aW9ucy5iZWZvcmVSZW5kZXImJnRoaXMub3B0aW9ucy5iZWZvcmVSZW5kZXIoKX19LHtrZXk6XCJvblJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiPT09dHlwZW9mIHRoaXMub3B0aW9ucy5vblJlbmRlciYmdGhpcy5vcHRpb25zLm9uUmVuZGVyKCl9fSx7a2V5Olwib25Nb2R1bGVzTG9hZGVkXCIsdmFsdWU6ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdGhpcy5vcHRpb25zLm9uTW9kdWxlc0xvYWRlZCYmdGhpcy5vcHRpb25zLm9uTW9kdWxlc0xvYWRlZCgpfX0se2tleTpcImxvYWRNb2R1bGVzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO0FycmF5LmlzQXJyYXkodGhpcy5vcHRpb25zLm1vZHVsZXMpJiYodGhpcy5vcHRpb25zLm1vZHVsZXMuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIG49bmV3IGU7aWYobi5jb25zdHJ1Y3Rvci5uYW1lJiZcIkZ1bmN0aW9uXCIhPT1uLmNvbnN0cnVjdG9yLm5hbWUpe3ZhciBvPVwibW9kdWxlLVwiLmNvbmNhdCh0LnV0aWxpdGllcy5jYW1lbENhc2Uobi5jb25zdHJ1Y3Rvci5uYW1lKSk7dC5rZXlib2FyZFBsdWdpbkNsYXNzZXM9dC5rZXlib2FyZFBsdWdpbkNsYXNzZXMrXCIgXCIuY29uY2F0KG8pfW4uaW5pdCh0KX0pKSx0aGlzLmtleWJvYXJkUGx1Z2luQ2xhc3Nlcz10aGlzLmtleWJvYXJkUGx1Z2luQ2xhc3NlcytcIiBtb2R1bGVzLWxvYWRlZFwiLHRoaXMucmVuZGVyKCksdGhpcy5vbk1vZHVsZXNMb2FkZWQoKSl9fSx7a2V5OlwiZ2V0TW9kdWxlUHJvcFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuISF0aGlzLm1vZHVsZXNbdF0mJnRoaXMubW9kdWxlc1t0XVtlXX19LHtrZXk6XCJnZXRNb2R1bGVzTGlzdFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5rZXlzKHRoaXMubW9kdWxlcyl9fSx7a2V5OlwicGFyc2VSb3dET01Db250YWluZXJzXCIsdmFsdWU6ZnVuY3Rpb24odCxlLG4sbyl7dmFyIGk9dGhpcyxzPUFycmF5LmZyb20odC5jaGlsZHJlbiksYT0wO3JldHVybiBzLmxlbmd0aCYmbi5mb3JFYWNoKChmdW5jdGlvbihuLHIpe3ZhciB1PW9bcl07aWYoIXV8fCEodT5uKSlyZXR1cm4hMTt2YXIgYz1uLWEsbD11LWEsaD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2guY2xhc3NOYW1lKz1cImhnLWJ1dHRvbi1jb250YWluZXJcIjt2YXIgZD1cIlwiLmNvbmNhdChpLm9wdGlvbnMubGF5b3V0TmFtZSxcIi1yXCIpLmNvbmNhdChlLFwiY1wiKS5jb25jYXQocik7aC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXNrVUlEXCIsZCk7dmFyIHA9cy5zcGxpY2UoYyxsLWMrMSk7YT1sLWMscC5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gaC5hcHBlbmRDaGlsZCh0KX0pKSxzLnNwbGljZShjLDAsaCksdC5pbm5lckhUTUw9XCJcIixzLmZvckVhY2goKGZ1bmN0aW9uKGUpe3JldHVybiB0LmFwcGVuZENoaWxkKGUpfSkpLGkub3B0aW9ucy5kZWJ1ZyYmY29uc29sZS5sb2coXCJyb3dET01Db250YWluZXJcIixwLGMsbCxhKzEpfSkpLHR9fSx7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY2xlYXIoKSx0aGlzLmluaXRpYWxpemVkfHx0aGlzLmJlZm9yZUZpcnN0UmVuZGVyKCksdGhpcy5iZWZvcmVSZW5kZXIoKTt2YXIgZT1cImhnLWxheW91dC1cIi5jb25jYXQodGhpcy5vcHRpb25zLmxheW91dE5hbWUpLG49dGhpcy5vcHRpb25zLmxheW91dHx8e2RlZmF1bHQ6W1wiYCAxIDIgMyA0IDUgNiA3IDggOSAwIC0gPSB7YmtzcH1cIixcInt0YWJ9IHEgdyBlIHIgdCB5IHUgaSBvIHAgWyBdIFxcXFxcIixcIntsb2NrfSBhIHMgZCBmIGcgaCBqIGsgbCA7ICcge2VudGVyfVwiLFwie3NoaWZ0fSB6IHggYyB2IGIgbiBtICwgLiAvIHtzaGlmdH1cIixcIi5jb20gQCB7c3BhY2V9XCJdLHNoaWZ0OltcIn4gISBAICMgJCAlIF4gJiAqICggKSBfICsge2Jrc3B9XCIsXCJ7dGFifSBRIFcgRSBSIFQgWSBVIEkgTyBQIHsgfSB8XCIsJ3tsb2NrfSBBIFMgRCBGIEcgSCBKIEsgTCA6IFwiIHtlbnRlcn0nLFwie3NoaWZ0fSBaIFggQyBWIEIgTiBNIDwgPiA/IHtzaGlmdH1cIixcIi5jb20gQCB7c3BhY2V9XCJdfSxvPXRoaXMub3B0aW9ucy51c2VUb3VjaEV2ZW50c3x8ITEsaT1vP1wiaGctdG91Y2gtZXZlbnRzXCI6XCJcIixzPXRoaXMub3B0aW9ucy51c2VNb3VzZUV2ZW50c3x8ITEsYT10aGlzLm9wdGlvbnMuZGlzYWJsZVJvd0J1dHRvbkNvbnRhaW5lcnM7dGhpcy5rZXlib2FyZERPTS5jbGFzc05hbWU9dGhpcy5nZXRLZXlib2FyZENsYXNzU3RyaW5nKHRoaXMub3B0aW9ucy50aGVtZSxlLHRoaXMua2V5Ym9hcmRQbHVnaW5DbGFzc2VzLGkpLG5bdGhpcy5vcHRpb25zLmxheW91dE5hbWVdLmZvckVhY2goKGZ1bmN0aW9uKGUsbil7dmFyIGk9ZS5zcGxpdChcIiBcIikscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3IuY2xhc3NOYW1lKz1cImhnLXJvd1wiO3ZhciB1PVtdLGM9W107aS5mb3JFYWNoKChmdW5jdGlvbihlLGkpe3ZhciBsLGg9IWEmJlwic3RyaW5nXCI9PT10eXBlb2YgZSYmZS5sZW5ndGg+MSYmMD09PWUuaW5kZXhPZihcIltcIiksZD0hYSYmXCJzdHJpbmdcIj09PXR5cGVvZiBlJiZlLmxlbmd0aD4xJiZlLmluZGV4T2YoXCJdXCIpPT09ZS5sZW5ndGgtMTtoJiYodS5wdXNoKGkpLGU9ZS5yZXBsYWNlKC9cXFsvZyxcIlwiKSksZCYmKGMucHVzaChpKSxlPWUucmVwbGFjZSgvXFxdL2csXCJcIikpO3ZhciBwPXQudXRpbGl0aWVzLmdldEJ1dHRvbkNsYXNzKGUpLGY9dC51dGlsaXRpZXMuZ2V0QnV0dG9uRGlzcGxheU5hbWUoZSx0Lm9wdGlvbnMuZGlzcGxheSx0Lm9wdGlvbnMubWVyZ2VEaXNwbGF5KSx5PXQub3B0aW9ucy51c2VCdXR0b25UYWc/XCJidXR0b25cIjpcImRpdlwiLGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh5KTtiLmNsYXNzTmFtZSs9XCJoZy1idXR0b24gXCIuY29uY2F0KHApLChsPWIuY2xhc3NMaXN0KS5hZGQuYXBwbHkobCxfdG9Db25zdW1hYmxlQXJyYXkodC5nZXRCdXR0b25UaGVtZUNsYXNzZXMoZSkpKSx0LnNldERPTUJ1dHRvbkF0dHJpYnV0ZXMoZSwoZnVuY3Rpb24odCxlKXtiLnNldEF0dHJpYnV0ZSh0LGUpfSkpLHQuYWN0aXZlQnV0dG9uQ2xhc3M9XCJoZy1hY3RpdmVCdXR0b25cIiwhdC51dGlsaXRpZXMucG9pbnRlckV2ZW50c1N1cHBvcnRlZCgpfHxvfHxzP28/KGIub250b3VjaHN0YXJ0PWZ1bmN0aW9uKG4pe3QuaGFuZGxlQnV0dG9uQ2xpY2tlZChlKSx0LmhhbmRsZUJ1dHRvbk1vdXNlRG93bihlLG4pfSxiLm9udG91Y2hlbmQ9ZnVuY3Rpb24oKXt0LmhhbmRsZUJ1dHRvbk1vdXNlVXAoZSl9LGIub250b3VjaGNhbmNlbD1mdW5jdGlvbigpe3QuaGFuZGxlQnV0dG9uTW91c2VVcChlKX0pOihiLm9uY2xpY2s9ZnVuY3Rpb24oKXt0LmlzTW91c2VIb2xkPSExLHQuaGFuZGxlQnV0dG9uQ2xpY2tlZChlKX0sYi5vbm1vdXNlZG93bj1mdW5jdGlvbihuKXt0LmhhbmRsZUJ1dHRvbk1vdXNlRG93bihlLG4pfSxiLm9ubW91c2V1cD1mdW5jdGlvbigpe3QuaGFuZGxlQnV0dG9uTW91c2VVcChlKX0pOihiLm9ucG9pbnRlcmRvd249ZnVuY3Rpb24obil7dC5oYW5kbGVCdXR0b25DbGlja2VkKGUpLHQuaGFuZGxlQnV0dG9uTW91c2VEb3duKGUsbil9LGIub25wb2ludGVydXA9ZnVuY3Rpb24oKXt0LmhhbmRsZUJ1dHRvbk1vdXNlVXAoZSl9LGIub25wb2ludGVyY2FuY2VsPWZ1bmN0aW9uKCl7dC5oYW5kbGVCdXR0b25Nb3VzZVVwKGUpfSksYi5zZXRBdHRyaWJ1dGUoXCJkYXRhLXNrQnRuXCIsZSk7dmFyIG09XCJcIi5jb25jYXQodC5vcHRpb25zLmxheW91dE5hbWUsXCItclwiKS5jb25jYXQobixcImJcIikuY29uY2F0KGkpO2Iuc2V0QXR0cmlidXRlKFwiZGF0YS1za0J0blVJRFwiLG0pO3ZhciBnPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO2cuaW5uZXJIVE1MPWYsYi5hcHBlbmRDaGlsZChnKSx0LmJ1dHRvbkVsZW1lbnRzW2VdfHwodC5idXR0b25FbGVtZW50c1tlXT1bXSksdC5idXR0b25FbGVtZW50c1tlXS5wdXNoKGIpLHIuYXBwZW5kQ2hpbGQoYil9KSkscj10LnBhcnNlUm93RE9NQ29udGFpbmVycyhyLG4sdSxjKSx0LmtleWJvYXJkRE9NLmFwcGVuZENoaWxkKHIpfSkpLHRoaXMub25SZW5kZXIoKSx0aGlzLmluaXRpYWxpemVkfHwodGhpcy5pbml0aWFsaXplZD0hMCwhdGhpcy51dGlsaXRpZXMucG9pbnRlckV2ZW50c1N1cHBvcnRlZCgpfHxvfHxzP28/KGRvY3VtZW50Lm9udG91Y2hlbmQ9ZnVuY3Rpb24oKXtyZXR1cm4gdC5oYW5kbGVCdXR0b25Nb3VzZVVwKCl9LGRvY3VtZW50Lm9udG91Y2hjYW5jZWw9ZnVuY3Rpb24oKXtyZXR1cm4gdC5oYW5kbGVCdXR0b25Nb3VzZVVwKCl9LHRoaXMua2V5Ym9hcmRET00ub250b3VjaHN0YXJ0PWZ1bmN0aW9uKGUpe3JldHVybiB0LmhhbmRsZUtleWJvYXJkQ29udGFpbmVyTW91c2VEb3duKGUpfSk6b3x8KGRvY3VtZW50Lm9ubW91c2V1cD1mdW5jdGlvbigpe3JldHVybiB0LmhhbmRsZUJ1dHRvbk1vdXNlVXAoKX0sdGhpcy5rZXlib2FyZERPTS5vbm1vdXNlZG93bj1mdW5jdGlvbihlKXtyZXR1cm4gdC5oYW5kbGVLZXlib2FyZENvbnRhaW5lck1vdXNlRG93bihlKX0pOihkb2N1bWVudC5vbnBvaW50ZXJ1cD1mdW5jdGlvbigpe3JldHVybiB0LmhhbmRsZUJ1dHRvbk1vdXNlVXAoKX0sdGhpcy5rZXlib2FyZERPTS5vbnBvaW50ZXJkb3duPWZ1bmN0aW9uKGUpe3JldHVybiB0LmhhbmRsZUtleWJvYXJkQ29udGFpbmVyTW91c2VEb3duKGUpfSksdGhpcy5vbkluaXQoKSl9fV0pJiZLZXlib2FyZF9kZWZpbmVQcm9wZXJ0aWVzKHQucHJvdG90eXBlLGUpLG4mJktleWJvYXJkX2RlZmluZVByb3BlcnRpZXModCxuKSxTaW1wbGVLZXlib2FyZH0oKTtlLmRlZmF1bHQ9c31dKX0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/simple-keyboard/build/index.js\n");

/***/ })

}]);